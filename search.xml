<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Redis学习笔记</title>
      <link href="/2020/07/03/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/07/03/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>Redis是一个使用ANSI C编写的开源、支持网络、基于内存、可选持久性的键值对存储数据库。从2015年6月开始，Redis的开发由Redis Labs赞助，而2013年5月至2015年6月期间，其开发由Pivotal赞助。在2013年5月之前，其开发由VMware赞助。根据月度排行网站DB-Engines.com的数据显示，Redis是最流行的键值对存储数据库。</p><p>Redis主要有这几部分知识，五大数据类型，持久化方式，发布订阅，主从复制+哨兵。</p><a id="more"></a><h2 id="Redis的安装"><a href="#Redis的安装" class="headerlink" title="Redis的安装"></a>Redis的安装</h2><h3 id="centos安装redis"><a href="#centos安装redis" class="headerlink" title="centos安装redis"></a>centos安装redis</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-6.0.5.tar.gz</span><br><span class="line">tar -zxvf redis-6.0.5.tar.gz</span><br><span class="line"><span class="built_in">cd</span> redis-6.0.5</span><br><span class="line">sudo make</span><br><span class="line">sudo make install PREFIX=/opt/redis</span><br></pre></td></tr></table></figure><h3 id="centos-设置redis开启自启动"><a href="#centos-设置redis开启自启动" class="headerlink" title="centos 设置redis开启自启动"></a>centos 设置redis开启自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/lib/systemd/system/redis.service</span><br><span class="line"></span><br><span class="line"><span class="comment">## redis.service 内容</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=The redis-server Process Manager</span><br><span class="line">After=syslog.target network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/var/run/redis_6379.pid</span><br><span class="line">ExecStart=/opt/redis/bin/redis-server /opt/redis/bin/redis.conf</span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -USR2 <span class="variable">$MAINPID</span></span><br><span class="line">ExecStop=/bin/<span class="built_in">kill</span> -SIGINT <span class="variable">$MAINPID</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结束，保存退出</span></span><br><span class="line"><span class="comment"># 刷新守护进程列表</span></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">sudo systemctl start redis.service</span><br><span class="line"><span class="comment"># 设置服务开启自启</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> redis.service</span><br></pre></td></tr></table></figure><h3 id="redis开启远程连接（redis-conf）"><a href="#redis开启远程连接（redis-conf）" class="headerlink" title="redis开启远程连接（redis.conf）"></a>redis开启远程连接（redis.conf）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## redis.conf 的一些配置</span></span><br><span class="line"><span class="comment"># 注释 bind 127.0.0.1</span></span><br><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line"><span class="comment"># 关闭保护模式</span></span><br><span class="line">protected-mode no</span><br><span class="line"><span class="comment"># 允许后台启动</span></span><br><span class="line">daemonize yes</span><br></pre></td></tr></table></figure><h2 id="五大数据类型"><a href="#五大数据类型" class="headerlink" title="五大数据类型"></a>五大数据类型</h2><p>redis中的数据都是以key/value的形式存储的，五大数据类型主要是指value的数据类型。</p><h3 id="String字符串"><a href="#String字符串" class="headerlink" title="String字符串"></a>String字符串</h3><p>最基础的数据类型，需要注意的是redis中的字符串大小上限是512M。</p><p><strong>APPEND</strong></p><p>使用APPEND命令时，如果key已经存在，则会直接在value后追加值，如果key不存在，则会先创建一个value为空字符串的key，然后再追加。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; get k1</span><br><span class="line">v1</span><br><span class="line">127.0.0.1:6379&gt; append k1 v1vv</span><br><span class="line">6</span><br><span class="line">127.0.0.1:6379&gt; get k1</span><br><span class="line">v1v1vv</span><br></pre></td></tr></table></figure><p><strong>GET</strong></p><p>GET命令用来获取对应key的value，如果key不存在则返回nil。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; get k1</span><br><span class="line">v1v1vv</span><br></pre></td></tr></table></figure><p><strong>GETRANGE</strong></p><p>GETRANGE用来返回key所对应的value的子串，子串由start和end决定，从左往右计算，如果下标是负数，则从右往左计算，其中-1表示最后一个字符，-2是倒数第二个…</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; getrange k1 1 3</span><br><span class="line">1v1</span><br></pre></td></tr></table></figure><p><strong>GETSET</strong></p><p>GETSET命令可以用来获取key所对应的value，并对key进行重置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; get k2</span><br><span class="line">v2</span><br><span class="line">127.0.0.1:6379&gt; getset k2 v2set</span><br><span class="line">v2</span><br><span class="line">127.0.0.1:6379&gt; get k2</span><br><span class="line">v2set</span><br></pre></td></tr></table></figure><p><strong>SETRANGE</strong></p><p>SETRANGE用来覆盖一个已经存在的key的value。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; setrange k2 2 range</span><br><span class="line">7</span><br><span class="line">127.0.0.1:6379&gt; get k2</span><br><span class="line">v2range</span><br></pre></td></tr></table></figure><p><strong>SETEX</strong></p><p>SETEX用来给key设置value，同时设置过期时间，等效于先给key设置value，再给key设置过期时间。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; setex k4 5 v4</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p><strong>SETNX</strong></p><p>SETNX是 <strong>SET</strong> if <strong>N</strong>ot e<strong>X</strong>ists的简写，SET命令在执行时，如果key已经存在，则新值会覆盖掉旧值，而对于SETNX命令，如果key已经存在，则不做任何操作，如果key不存在，则效果等同于SET命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; setnx k4 v4v4</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="List列表"><a href="#List列表" class="headerlink" title="List列表"></a>List列表</h3><p>LIST是一个简单的字符串列表，按照插入顺序进行排序，可以从头尾插入或弹出。</p><p><strong>LPUSH</strong></p><p>将一个或多个值value插入到列表key的表头，如果有多个value值，那么各个value值按从左到右的顺序依次插入到表头。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; lpush l1 v1 v2 v3 v4 v5</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>LRANGE</strong></p><p>返回列表key中指定区间内的元素，区间以偏移量start和stop指定，下标(index)参数start和stop都以0为底，即0表示列表的第一个元素，1表示列表的第二个元素，以此类推。我们也可以使用负数下标，以-1表示列表的最后一个元素， -2 表示列表的倒数第二个元素，以此类推。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; lrange l1 0 -1</span><br><span class="line">v5</span><br><span class="line">v4</span><br><span class="line">v3</span><br><span class="line">v2</span><br><span class="line">v1</span><br></pre></td></tr></table></figure><p><strong>RPUSH</strong></p><p>RPUSH与LPUSH的功能基本一致，不同的是RPUSH的中的value值是按照从右到左的顺序依次插入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; rpush l1 v6 v7</span><br><span class="line">7</span><br><span class="line">127.0.0.1:6379&gt; lrange l1 0 -1</span><br><span class="line">v5</span><br><span class="line">v4</span><br><span class="line">v3</span><br><span class="line">v2</span><br><span class="line">v1</span><br><span class="line">v6</span><br><span class="line">v7</span><br></pre></td></tr></table></figure><p><strong>RPOP</strong></p><p>RPOP命令可以移除并返回列表key的尾元素。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; rpop l1</span><br><span class="line">v7</span><br><span class="line">127.0.0.1:6379&gt; rpop l1</span><br><span class="line">v6</span><br><span class="line">127.0.0.1:6379&gt; lrange l1 0 -1</span><br><span class="line">v5</span><br><span class="line">v4</span><br><span class="line">v3</span><br><span class="line">v2</span><br><span class="line">v1</span><br></pre></td></tr></table></figure><p><strong>LPOP</strong></p><p>LPOP和RPOP类似，不同的是LPOP移除并返回列表key的头元素。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; lpop l1</span><br><span class="line">v5</span><br><span class="line">127.0.0.1:6379&gt; lrange l1 0 -1</span><br><span class="line">v4</span><br><span class="line">v3</span><br><span class="line">v2</span><br><span class="line">v1</span><br></pre></td></tr></table></figure><p><strong>LINDEX</strong></p><p>LINDEX命令可以返回列表key中，下标为index的元素，正数下标0表示第一个元素，也可以使用负数下标，-1表示倒数第一个元素。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; lrange l1 0 -1</span><br><span class="line">v4</span><br><span class="line">v3</span><br><span class="line">v2</span><br><span class="line">v1</span><br><span class="line">127.0.0.1:6379&gt; lindex l1 2</span><br><span class="line">v2</span><br></pre></td></tr></table></figure><h3 id="Hash键值对"><a href="#Hash键值对" class="headerlink" title="Hash键值对"></a>Hash键值对</h3><p>HASH类似于Java中的Map，是一个键值对集合，在redis中可以用来存储对象。</p><p><strong>HSET</strong></p><p>HSET命令可以用来设置key指定的哈希集中指定字段的值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hset hk1 k1 v1 k2 v2 k3 v3 k4 v4 k5 v5</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>HGET</strong></p><p>HGET命令可以用来返回key指定的哈希集中该字段所关联的值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hget hk1 k1</span><br><span class="line">v1</span><br></pre></td></tr></table></figure><p><strong>HDEL</strong></p><p>HDEL命令可以从key指定的哈希集中移除指定的域，在哈希集中不存在的域将被忽略。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hdel hk1 k1</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>HSETNX</strong></p><p>HSETNX命令只在key指定的哈希集中不存在指定的字段时，设置字段的值，如果字段已存在，该操作无效果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hsetnx hk1 k1 v11</span><br><span class="line">1</span><br><span class="line">127.0.0.1:6379&gt; hget hk1 k1</span><br><span class="line">v11</span><br><span class="line">127.0.0.1:6379&gt; hsetnx hk1 k1 v12</span><br><span class="line">0</span><br><span class="line">127.0.0.1:6379&gt; hget hk1 k1</span><br><span class="line">v11</span><br></pre></td></tr></table></figure><p><strong>HVALS</strong></p><p>HVALS命令可以返回key指定的哈希集中所有字段的值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hvals hk1</span><br><span class="line">v2</span><br><span class="line">v3</span><br><span class="line">v4</span><br><span class="line">v5</span><br><span class="line">v11</span><br></pre></td></tr></table></figure><p><strong>HKEYS</strong></p><p>HKEYS命令可以返回key指定的哈希集中所有字段的名字。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hkeys hk1</span><br><span class="line">k2</span><br><span class="line">k3</span><br><span class="line">k4</span><br><span class="line">k5</span><br><span class="line">k1</span><br></pre></td></tr></table></figure><p><strong>HGETALL</strong></p><p>HEXISTS命令可以返回hash里面field是否存在。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hgetall hk1</span><br><span class="line">k2</span><br><span class="line">v2</span><br><span class="line">k3</span><br><span class="line">v3</span><br><span class="line">k4</span><br><span class="line">v4</span><br><span class="line">k5</span><br><span class="line">v5</span><br><span class="line">k1</span><br><span class="line">v11</span><br></pre></td></tr></table></figure><p><strong>HLEN</strong></p><p>HSTRLEN可以返回hash指定field的value的字符串长度，如果hash或者field不存在，返回0。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hlen hk1</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h3 id="Set集合"><a href="#Set集合" class="headerlink" title="Set集合"></a>Set集合</h3><p>SET是String类型的无序集合，不同于LIST，SET中的元素不可以重复。</p><p><strong>SADD</strong></p><p>SADD命令可以添加一个或多个指定的member元素到集合的key中，指定的一个或者多个元素member如果已经在集合key中存在则忽略，如果集合key不存在，则新建集合key,并添加member元素到集合key中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; sadd sk1 v1 v2 v3 v3 v4</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p><strong>SREM</strong></p><p>SREM命令可以在key集合中移除指定的元素，如果指定的元素不是key集合中的元素则忽略。如果key集合不存在则被视为一个空的集合，该命令返回0。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; srem sk1 v5</span><br><span class="line">0</span><br><span class="line">127.0.0.1:6379&gt; srem sk1 v4</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>SISMEMBER</strong></p><p>SISMEMBER命令可以返回成员member是否是存储的集合key的成员。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; sismember sk1 v4</span><br><span class="line">0</span><br><span class="line">127.0.0.1:6379&gt; sismember sk1 v3</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>SCARD</strong></p><p>SCARD命令可以返回集合存储的key的基数(集合元素的数量)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; scard sk1</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p><strong>SMEMBERS</strong></p><p>SMEMBERS命令可以返回key集合所有的元素。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; smembers sk1</span><br><span class="line">v3</span><br><span class="line">v1</span><br><span class="line">v2</span><br></pre></td></tr></table></figure><p><strong>SPOP</strong></p><p>SPOP命令的用法和SRANDMEMBER类似，不同的是，SPOP每次选择一个随机的元素之后，该元素会出栈，而SRANDMEMBER则不会出栈，只是将该元素展示出来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; spop sk1</span><br><span class="line">v2</span><br><span class="line">127.0.0.1:6379&gt; smembers sk1</span><br><span class="line">v3</span><br><span class="line">v1</span><br></pre></td></tr></table></figure><p><strong>SDIFF</strong></p><p>SDIFF可以用来返回一个集合与给定集合的差集的元素。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; smembers sk1</span><br><span class="line">v3</span><br><span class="line">v1</span><br><span class="line">127.0.0.1:6379&gt; smembers sk2</span><br><span class="line">v1</span><br><span class="line">v4</span><br><span class="line">v2</span><br><span class="line">127.0.0.1:6379&gt; sdiff sk1 sk2</span><br><span class="line">v3</span><br></pre></td></tr></table></figure><p><strong>SDIFFSTORE</strong></p><p>SDIFFSTORE命令与SDIFF命令基本一致，不同的是SDIFFSTORE命令会将结果保存在一个集合中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; sdiffstore sk3 sk2 sk1</span><br><span class="line">2</span><br><span class="line">127.0.0.1:6379&gt; smembers sk3</span><br><span class="line">v2</span><br><span class="line">v4</span><br></pre></td></tr></table></figure><p><strong>SINTER</strong></p><p>SINTER命令可以用来计算指定key之间元素的交集。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; smembers sk2</span><br><span class="line">v1</span><br><span class="line">v4</span><br><span class="line">v2</span><br><span class="line">127.0.0.1:6379&gt; smembers sk3</span><br><span class="line">v2</span><br><span class="line">v4</span><br><span class="line">127.0.0.1:6379&gt; sinter sk2 sk3</span><br><span class="line">v2</span><br><span class="line">v4</span><br></pre></td></tr></table></figure><p><strong>SUNION</strong></p><p>SUNION可以用来计算两个集合的并集。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; sunion sk1 sk3</span><br><span class="line">v1</span><br><span class="line">v3</span><br><span class="line">v4</span><br><span class="line">v2</span><br></pre></td></tr></table></figure><h3 id="ZSet有序集合"><a href="#ZSet有序集合" class="headerlink" title="ZSet有序集合"></a>ZSet有序集合</h3><p>ZSET和SET一样，也是STRING类型的元素的集合，不同的是ZSET中的每个元素都会关联一个double类型的分数，ZSET中的成员都是唯一的，但是所关联的分数可以重复。</p><p><strong>ZADD</strong></p><p>ZADD命令可以将所有指定成员添加到键为key的有序集合里面。添加时可以指定多个分数/成员（score/member）对。 如果指定添加的成员已经是有序集合里面的成员，则会更新该成员的分数（scrore）并更新到正确的排序位置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zadd zk1 10 v1 20 v2 30 v3 40 v4 10 v5</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>ZSCORE</strong></p><p>ZSCORE命令可以返回有序集key中，成员member的score值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zscore zk1 v1</span><br><span class="line">10</span><br><span class="line">127.0.0.1:6379&gt; zscore zk1 v5</span><br><span class="line">10</span><br></pre></td></tr></table></figure><p><strong>ZRANGE</strong></p><p>ZRANGE命令可以根据index返回member，该命令在执行时加上withscores参数可以连同score一起返回。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zrange zk1 0 -1</span><br><span class="line">v1</span><br><span class="line">v5</span><br><span class="line">v2</span><br><span class="line">v3</span><br><span class="line">v4</span><br><span class="line">127.0.0.1:6379&gt; zrange zk1 0 -1 withscores</span><br><span class="line">v1</span><br><span class="line">10</span><br><span class="line">v5</span><br><span class="line">10</span><br><span class="line">v2</span><br><span class="line">20</span><br><span class="line">v3</span><br><span class="line">30</span><br><span class="line">v4</span><br><span class="line">40</span><br></pre></td></tr></table></figure><p><strong>ZCOUNT</strong></p><p>ZCOUNT命令可以返回有序集key中，score值在min和max之间(默认包括score值等于min或max)的成员。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zcount zk1 10 30</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p><strong>ZRANGEBYSCORE</strong></p><p>ZRANGEBYSCORE命令可以按照score范围范围元素，加上withscores可以连score一起返回。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zrangebyscore zk1 10 30 </span><br><span class="line">v1</span><br><span class="line">v5</span><br><span class="line">v2</span><br><span class="line">v3</span><br><span class="line">127.0.0.1:6379&gt; zrangebyscore zk1 10 30 withscores</span><br><span class="line">v1</span><br><span class="line">10</span><br><span class="line">v5</span><br><span class="line">10</span><br><span class="line">v2</span><br><span class="line">20</span><br><span class="line">v3</span><br><span class="line">30</span><br></pre></td></tr></table></figure><p><strong>ZRANK</strong></p><p>ZRANK命令可以返回有序集key中成员member的排名。其中有序集成员按score值递增(从小到大)顺序排列。排名以0为底，即score值最小的成员排名为0。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zrank zk1 v2</span><br><span class="line">2</span><br><span class="line">127.0.0.1:6379&gt; zrank zk1 v4</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p><strong>ZREM</strong></p><p>ZREM命令可以从集合中弹出一个元素。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zrem zk1 v1 v2</span><br><span class="line">2</span><br><span class="line">127.0.0.1:6379&gt; zrange zk1 0 -1</span><br><span class="line">v5</span><br><span class="line">v3</span><br><span class="line">v4</span><br></pre></td></tr></table></figure><h3 id="Key相关命令"><a href="#Key相关命令" class="headerlink" title="Key相关命令"></a>Key相关命令</h3><p><strong>DEL命令</strong></p><p>通过DEL命令我们可以删除一个已经存在的key。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">k2</span><br><span class="line">k4</span><br><span class="line">k3</span><br><span class="line">sk2</span><br><span class="line">zk1</span><br><span class="line">sk1</span><br><span class="line">hk1</span><br><span class="line">l1</span><br><span class="line">k1</span><br><span class="line">127.0.0.1:6379&gt; del sk2 k2 k3</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p><strong>DUMP命令</strong></p><p>DUMP命令可以序列化给定的key，并返回序列化之后的值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; dump k4</span><br><span class="line"><span class="string">"\x00\x02v4\t\x00tx\x19\x8c\xe4\xa9\xaa\xb3"</span></span><br></pre></td></tr></table></figure><p><strong>EXISTS</strong></p><p>EXISTS命令用来检测一个给定的key是否存在。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">"k4"</span></span><br><span class="line">2) <span class="string">"zk1"</span></span><br><span class="line">3) <span class="string">"sk1"</span></span><br><span class="line">4) <span class="string">"hk1"</span></span><br><span class="line">5) <span class="string">"l1"</span></span><br><span class="line">6) <span class="string">"k1"</span></span><br><span class="line">127.0.0.1:6379&gt; exists k4</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure><p><strong>TTL命令</strong></p><p>TTL命令可以查看一个给定key的有效时间。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; ttl k4 </span><br><span class="line">(<span class="built_in">integer</span>) -1</span><br></pre></td></tr></table></figure><p><strong>EXPIRE命令</strong></p><p>EXPIRE命令可以给key设置有效期，在有效期过后，key会被销毁。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; expire k4 120</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; ttl k3</span><br><span class="line">(<span class="built_in">integer</span>) -2  <span class="comment"># 永久存在</span></span><br><span class="line">127.0.0.1:6379&gt; ttl k4</span><br><span class="line">(<span class="built_in">integer</span>) 107 <span class="comment"># 存活107秒</span></span><br></pre></td></tr></table></figure><p><strong>PERSIST命令</strong></p><p>PERSIST命令表示移除一个key的过期时间，这样该key就永远不会过期。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; persist k4</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; ttl k4</span><br><span class="line">(integer) -1</span><br></pre></td></tr></table></figure><p><strong>KEYS 命令</strong></p><p>KEYS命令可以获取满足给定模式的所有key。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KEYS *（*表示所有的key，*也可以是一个正在表达式）</span><br></pre></td></tr></table></figure><h2 id="发布订阅"><a href="#发布订阅" class="headerlink" title="发布订阅"></a>发布订阅</h2><p><strong>SUBSCRIBE </strong></p><p>订阅频道</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; subscribe c1 c2 c3</span><br><span class="line">Reading messages... (press Ctrl-C to quit)</span><br><span class="line">1) <span class="string">"subscribe"</span></span><br><span class="line">2) <span class="string">"c1"</span></span><br><span class="line">3) (<span class="built_in">integer</span>) 1</span><br><span class="line">1) <span class="string">"subscribe"</span></span><br><span class="line">2) <span class="string">"c2"</span></span><br><span class="line">3) (<span class="built_in">integer</span>) 2</span><br><span class="line">1) <span class="string">"subscribe"</span></span><br><span class="line">2) <span class="string">"c3"</span></span><br><span class="line">3) (<span class="built_in">integer</span>) 3</span><br></pre></td></tr></table></figure><p><strong>PUBLISH </strong></p><p>发布消息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; PUBLISH c1 <span class="string">"hello redis!"</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure><p><strong>PSUBSCRIBE </strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; PSUBSCRIBE c*</span><br><span class="line">Reading messages... (press Ctrl-C to quit)</span><br><span class="line">1) <span class="string">"psubscribe"</span></span><br><span class="line">2) <span class="string">"c*"</span></span><br><span class="line">3) (<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>不同于关系型数据库，redis中的事务出错时没有回滚，对此，官方的解释如下：</p><p>Redis 命令只会因为错误的语法而失败（并且这些问题不能在入队时发现），或是命令用在了错误类型的键上面：这也就是说，从实用性的角度来说，失败的命令是由编程错误造成的，而这些错误应该在开发的过程中被发现，而不应该出现在生产环境中。因为不需要对回滚进行支持，所以 Redis 的内部可以保持简单且快速。</p><p><strong>MULTI</strong></p><p>开启事物</p><p><strong>EXEC</strong></p><p>结束事物并执行</p><p><strong>WATCH</strong></p><p>事务中的WATCH命令可以用来监控一个key，通过这种监控，我们可以为redis事务提供(CAS)行为。 如果有至少一个被WATCH监视的键在EXEC执行之前被修改了，那么整个事务都会被取消，EXEC返回nil-reply来表示事务已经失败。</p><p><strong>事物中的异常行为</strong></p><p>redis中事务的异常情况总的来说分为两类：</p><p>1.进入队列之前就能发现的错误，比如命令输错；（拒绝执行并自动放弃这个事务）<br>2.执行EXEC之后才能发现的错误，比如给一个非数字字符加1；（执行产生错误，其他命令继续执行）</p><h2 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h2><p>整体上来说，redis持久化有两种方式，快照持久化和AOF，在项目中我们可以根据实际情况选择合适的持久化方式，也可以不用持久化，这关键看我们的redis在项目中扮演了什么样的角色。</p><h3 id="快照持久化"><a href="#快照持久化" class="headerlink" title="快照持久化"></a>快照持久化</h3><p>redis可以在某个时间点上对内存中的数据创建一个副本文件，副本文件中的数据在redis重启时会被自动加载，我们也可以将副本文件拷贝到其他地方一样可以使用。</p><h4 id="如何配置快照持久化（redis-conf）"><a href="#如何配置快照持久化（redis-conf）" class="headerlink" title="如何配置快照持久化（redis.conf）"></a>如何配置快照持久化（redis.conf）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">save 900 1# 900秒内至少一个key变更</span><br><span class="line">save 300 10# 100秒内至少10个key变更</span><br><span class="line">save 60 10000   # 60秒内10000个key变更</span><br><span class="line">stop-writes-on-bgsave-error yes  # 快照出错后，是否继续执行写命令</span><br><span class="line">rdbcompression yes   # 快照文件是否压缩</span><br><span class="line">dbfilename dump.rdb  # 快照文件名字</span><br><span class="line">dir ./   # 快照文件存放目录</span><br></pre></td></tr></table></figure><h4 id="手动创建快照"><a href="#手动创建快照" class="headerlink" title="手动创建快照"></a>手动创建快照</h4><p><strong>SAVE</strong></p><p>save命令是一个阻塞命令，在这个命令执行完成之前，不在处理其他请求，其他请求将被挂起。</p><p><strong>BGSAVE</strong></p><p>bgsave命令会fork一个子进程，用这个子进程将快照写入硬盘，而父进程则继续处理客户端发来的请求。</p><h4 id="自动创建快照时机"><a href="#自动创建快照时机" class="headerlink" title="自动创建快照时机"></a>自动创建快照时机</h4><ol><li>当条件满足时，如900秒内有一个key被操作，redis会触发bgsave命令进行备份；</li><li>当我们执行shutdown命令时，redis会执行save命令进行备份操作，备份完成后关闭服务器；</li><li>在主从模式中，当从机第一次连接上主机后会发一条sync命令来开始一次复制操作，此时主机会开始一次bgsave操作，并在bgsave操作结束后向从机发送快照数据实现数据同步；</li></ol><h3 id="AOF持久化"><a href="#AOF持久化" class="headerlink" title="AOF持久化"></a>AOF持久化</h3><p>与快照持久化不同，AOF持久化是将被执行的命令写到aof文件末尾，在恢复时只需要从头到尾执行一遍写命令即可恢复数据，AOF在redis中默认也是没有开启的，需要我们手动开启，开启方式为将redis.conf中的修改appendonly属性值为yes。</p><h4 id="aof配置（redis-conf）"><a href="#aof配置（redis-conf）" class="headerlink" title="aof配置（redis.conf）"></a>aof配置（redis.conf）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">appendonly yes   # 开启aof持久化</span><br><span class="line"></span><br><span class="line">appendfilename "appendonly.aof"   # aof备份文件名</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> appendfsync always   <span class="comment"># 每执行一次写操作备份一次</span></span></span><br><span class="line">appendfsync everysec   # 每秒备份一次（最常用）</span><br><span class="line"><span class="meta">#</span><span class="bash"> appendfsync no       <span class="comment"># 由操作系统决定备份时机</span></span></span><br><span class="line"></span><br><span class="line">no-appendfsync-on-rewrite no   # 对aof文件进行压缩时，是否执行同步操作</span><br><span class="line">auto-aof-rewrite-percentage 100   # 重写aof文件的百分比，基准为上一次重写文件大小或启动时文件大小</span><br><span class="line">auto-aof-rewrite-min-size 64mb    # 最少要大于64m才对aof文件进行重写</span><br></pre></td></tr></table></figure><h3 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h3><ol><li>如果redis只做缓存服务器，那么可以不使用任何持久化方式；</li><li>同时开启两种持久化方式，redis重启时优先载入aof文件来恢复原始的数据。rdb更适合用于备份数据库，快速重启，不会有aof可能潜在的bug，但是aof数据会更加完整；</li><li>因为rdb文件只用作后备用途，建议只在slave上持久化rdb文件，而且只要15分钟备份一次就够了，只保留save 900 1这条规则；</li><li>如果开启aof，一是会带来持续的io，二是rewrite过程中产生的新数据写到新文件造成的阻塞几乎不可避免。所以只要硬盘允许，尽量减少rewrite的频率，重写的基础可以设置5G以上。</li><li>如果不开启aof，紧靠master-slave replication也可以实现高可用性。能省掉一大笔io，也减少了rewrite带来的系统波动。代价是master/slave同时倒掉，会丢失十几分钟的数据。</li></ol><h2 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h2><p>主从复制可以在一定程度上扩展redis性能，redis的主从复制和关系型数据库的主从复制类似，从机能够精确的复制主机上的内容。实现了主从复制之后，一方面能够实现数据的读写分离，降低master的压力，另一方面也能实现数据的备份。</p><h3 id="配置方式"><a href="#配置方式" class="headerlink" title="配置方式"></a>配置方式</h3><ol><li><p>启动三个实例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis-4.0.8]# redis-server redis6379.conf</span><br><span class="line">[root@localhost redis-4.0.8]# redis-server redis6380.conf</span><br><span class="line">[root@localhost redis-4.0.8]# redis-server redis6381.conf</span><br></pre></td></tr></table></figure></li><li><p>连接服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h IP -p 端口  --raw      //登陆redis服务器时，增加参数 --raw（避免命令行中文乱码）</span><br></pre></td></tr></table></figure></li><li><p>从机上执行slaveof</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slaveof 127.0.0.1 6379</span><br></pre></td></tr></table></figure></li><li><p>查看每个实例当前状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO replication</span><br></pre></td></tr></table></figure></li></ol><h3 id="主从复制注意点"><a href="#主从复制注意点" class="headerlink" title="主从复制注意点"></a>主从复制注意点</h3><ol><li>如果主机运行一段时间了，从机连接上来，会备份主机所有的数据；</li><li>主从复制后，master可读可写，slave可读不可写；</li><li>主从结构运行中，主机不行挂掉，重启之后，他依然是主机；</li></ol><h3 id="主从复制原理"><a href="#主从复制原理" class="headerlink" title="主从复制原理"></a>主从复制原理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.slave启动成功连接到master后会发送一个sync命令。  </span><br><span class="line">2.Master接到命令启动后台的存盘进程，同时收集所有接收到的用于修改数据集命令。  </span><br><span class="line">3.在后台进程执行完毕之后，master将传送整个数据文件到slave,以完成一次完全同步。  </span><br><span class="line">4.全量复制：而slave服务在接收到数据库文件数据后，将其存盘并加载到内存中。  </span><br><span class="line">5.增量复制：Master继续将新的所有收集到的修改命令依次传给slave,完成同步。  </span><br><span class="line">6.但是只要是重新连接master,一次完全同步（全量复制)将被自动执行。</span><br></pre></td></tr></table></figure><h3 id="哨兵模式"><a href="#哨兵模式" class="headerlink" title="哨兵模式"></a>哨兵模式</h3><p><strong>sentinel.conf</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sentinel monitor mymaster 127.0.0.1 6379 1</span><br></pre></td></tr></table></figure><p><strong>启动哨兵</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-sentinel sentinel.conf</span><br></pre></td></tr></table></figure><p><strong>注意点</strong></p><p>当master挂掉之后，哨兵会重新选举一个slave当master，之前的master重启之后，也只能当slave了。</p><p>由于所有的写都是在master上操作的，master和slave会有一定的延迟，当系统繁忙，slave机器较多时问题会更严重，所以我们可以通过集群来进一步提示redis性能。</p>]]></content>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>这些年看过的网文</title>
      <link href="/2020/06/13/%E8%BF%99%E4%BA%9B%E5%B9%B4%E7%9C%8B%E8%BF%87%E7%9A%84%E7%BD%91%E6%96%87/"/>
      <url>/2020/06/13/%E8%BF%99%E4%BA%9B%E5%B9%B4%E7%9C%8B%E8%BF%87%E7%9A%84%E7%BD%91%E6%96%87/</url>
      <content type="html"><![CDATA[<p>从初中时拿着学习机，躲在被子里看网络小说，当时拷贝一部小说还是用手机蓝牙来传输，当时觉得真开心，一晃七八年过去了，看过的网文能记得主角名字的已经百中无一了，今天刚好闲下来，想把看过的这些小说记个名字。</p><p>我花了多少时间来看他们，他们带着我逃避时间，终于他们已经不能满足我了。</p><a id="more"></a><table><thead><tr><th>书名</th></tr></thead><tbody><tr><td>吞噬星空</td></tr><tr><td>黑道学生</td></tr><tr><td>斗罗大陆</td></tr><tr><td>琴帝</td></tr><tr><td>光之子</td></tr><tr><td>凡人修仙传</td></tr><tr><td>吞噬星空</td></tr><tr><td>星辰变</td></tr><tr><td>将夜</td></tr><tr><td>庆余年</td></tr><tr><td>醉枕江山</td></tr><tr><td>武动乾坤</td></tr><tr><td>大魏宫廷</td></tr><tr><td>唐砖</td></tr><tr><td>我要做皇帝</td></tr><tr><td>官居一品</td></tr><tr><td>大宋的智慧</td></tr><tr><td>孺子帝</td></tr><tr><td>革宋</td></tr><tr><td>晚明</td></tr><tr><td>将血</td></tr><tr><td>天下</td></tr><tr><td>秦歌一曲</td></tr><tr><td>金鳞开</td></tr><tr><td>大明最后一个狠人</td></tr><tr><td>北唐</td></tr><tr><td>十国千娇</td></tr><tr><td>赘婿</td></tr><tr><td>隐杀</td></tr></tbody></table><p>暂时记下这些吧，估算了一下，仅仅这些大概就有四千万字，还有许多，没有找到，这些都是起点上能找到的，或者我能想起来的，总体上初中看黑道比较多，高中玄幻比较多，之后就是大多是看历史了。</p><p>网文真的没收营养，最大的作用可能就是消磨时间了，可惜一寸光阴一寸金，总有一刻会发现自己没有时间值得消磨。</p>]]></content>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ZooKeeper典型应用场景一览</title>
      <link href="/2020/05/06/ZooKeeper%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E4%B8%80%E8%A7%88/"/>
      <url>/2020/05/06/ZooKeeper%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E4%B8%80%E8%A7%88/</url>
      <content type="html"><![CDATA[<p>ZooKeeper是一个高可用的分布式数据管理与系统协调框架。基于对Paxos算法的实现，是该框架保证了分布式环境中数据的强一致性，也正是基于这样的特性，使得ZooKeeper解决很多分布式问题。</p><p>值得注意的是，ZK并非天生就是为了这些应用场景设计的，都是后来众多开发者根据其框架的特性，利用其提供的一系列API接口（或者称为原语集），摸索出来的典型使用方法。</p><a id="more"></a><p><img src="https://raw.githubusercontent.com/dengweiqiang/BlogImages/master/ZooKeeper典型应用场景一览/ZooKeeper典型应用场景一览_阿里中间件团队博客.png" alt=""></p>]]></content>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spring Cloud 基础</title>
      <link href="/2020/05/06/Spring-Cloud-%E5%9F%BA%E7%A1%80/"/>
      <url>/2020/05/06/Spring-Cloud-%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<p>一个分布式系统应该要有这些基础组件，注册中心，负载均衡，熔断器，网关，配置中心，SpringCloud在SpringBoot的基础上，实现了一套开箱即用的分布式系统架构，我对SpringCloud的这些基础应用的使用，做了一个汇总，主要是能快速让一个分布式应用跑起来。</p><a id="more"></a><h3 id="Eureka"><a href="#Eureka" class="headerlink" title="Eureka"></a>Eureka</h3><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><ol><li><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--eureka server --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 应用名称</span><br><span class="line">spring.application.name=eureka-server</span><br><span class="line"># 服务端口</span><br><span class="line">server.port=8761</span><br><span class="line"># 实例主机名</span><br><span class="line">eureka.instance.hostname=localhost</span><br><span class="line"># 下面两行配置表示这个是一个server端</span><br><span class="line"># 不向Eureka注册自己</span><br><span class="line">eureka.client.register-with-eureka=false</span><br><span class="line"># 不获取注册表</span><br><span class="line">eureka.client.fetch-registry=false</span><br><span class="line"># 配置默认访问地址</span><br><span class="line">eureka.client.service-url.defaultZone=http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span><br></pre></td></tr></table></figure></li><li><p>配置注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableEurekaServer</span>  <span class="comment">// 配置在启动类上面，开启Eureka服务端配置</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaserverApplication</span> </span>&#123;</span><br></pre></td></tr></table></figure></li></ol><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><ol><li><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- eureka 客户端依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Web项目依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 应用名称</span><br><span class="line">spring.application.name=eureka-client</span><br><span class="line"># 服务端口</span><br><span class="line">server.port=8762</span><br><span class="line"></span><br><span class="line"># 配置默认注册地址（Eureka服务端地址）</span><br><span class="line">eureka.client.service-url.defaultZone=http://localhost:8761/eureka/</span><br></pre></td></tr></table></figure></li><li><p>配置注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableEurekaClient</span>  <span class="comment">// 配置在启动类上面，开启Eureka客户端配置</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceHiApplication</span> </span>&#123;</span><br></pre></td></tr></table></figure></li></ol><h3 id="Ribbon"><a href="#Ribbon" class="headerlink" title="Ribbon"></a>Ribbon</h3><ol><li><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Eureka --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Ribbon --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Web依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 应用名称</span><br><span class="line">spring.application.name=eureka-client</span><br><span class="line"># 服务端口</span><br><span class="line">server.port=8762</span><br><span class="line"></span><br><span class="line"># 配置默认注册地址（Eureka服务端地址）</span><br><span class="line">eureka.client.service-url.defaultZone=http://localhost:8761/eureka/</span><br></pre></td></tr></table></figure></li><li><p>配置注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableEurekaClient</span>  <span class="comment">// 配置在启动类上面，开启Eureka客户端配置</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceRibbonApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(ServiceRibbonApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向Spring Ioc容器注册一个RestTemplate</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@LoadBalanced</span>  <span class="comment">// 通过@LoadBalanced注解，表明这个RestTemplate开启负载均衡功能，默认为轮询</span></span><br><span class="line"><span class="function">RestTemplate <span class="title">restTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hiService</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 通过服务名访问，ribbon会根据服务名来选择具体的服务实例</span></span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">"http://SERVICE-HI/hi?name="</span>+name,String.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="Feign"><a href="#Feign" class="headerlink" title="Feign"></a>Feign</h3><ol><li><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Eureka --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Feign --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Web项目依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 应用名称</span><br><span class="line">spring.application.name=eureka-client</span><br><span class="line"># 服务端口</span><br><span class="line">server.port=8762</span><br><span class="line"></span><br><span class="line"># 配置默认注册地址（Eureka服务端地址）</span><br><span class="line">eureka.client.service-url.defaultZone=http://localhost:8761/eureka/</span><br></pre></td></tr></table></figure></li><li><p>配置注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableEurekaClient</span>  <span class="comment">// 配置在启动类上面，开启Eureka客户端配置</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span>  <span class="comment">// 开启Feign默认配置</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceFeignApplication</span> </span>&#123;｝</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个Feign接口，Web层的Controller层通过Feign接口来消费服务</span></span><br><span class="line"><span class="meta">@FeignClient</span>(value = <span class="string">"service-hi"</span>)  <span class="comment">// 指定调用哪个服务</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SchedualServiceHi</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 调用 service-hi 服务的 /hi 接口</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/hi"</span>,method = RequestMethod.GET)</span><br><span class="line">    <span class="function">String <span class="title">sayHiFromClientOne</span><span class="params">(@RequestParam(value = <span class="string">"name"</span>)</span> String name)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="Hystrix"><a href="#Hystrix" class="headerlink" title="Hystrix"></a>Hystrix</h3><ol><li><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Hystrix --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 应用名称</span><br><span class="line">spring.application.name=eureka-client</span><br><span class="line"># 服务端口</span><br><span class="line">server.port=8762</span><br><span class="line"></span><br><span class="line"># 配置默认注册地址（Eureka服务端地址）</span><br><span class="line">eureka.client.service-url.defaultZone=http://localhost:8761/eureka/</span><br><span class="line"></span><br><span class="line"># feign 中是自带断路器的，但是默认没有打开</span><br><span class="line">feign.hystrix.enabled=true</span><br></pre></td></tr></table></figure></li><li><p>配置注解（Ribbon）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableDiscoveryClient</span>  <span class="comment">// 配置在启动类上面，开启Eureka客户端配置</span></span><br><span class="line"><span class="meta">@EnableHystrix</span>  <span class="comment">// 开启Hystrix默认配置</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceRibbonApplication</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 业务类</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// hiService方法超时，或错误，直接调用hiError方法快速失败</span></span><br><span class="line">    <span class="meta">@HystrixCommand</span>(fallbackMethod = <span class="string">"hiError"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hiService</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">"http://SERVICE-HI/hi?name="</span>+name,String.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hiError</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hi,"</span>+name+<span class="string">",sorry,error!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置注解（Feign）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableEurekaClient</span>  <span class="comment">// 配置在启动类上面，开启Eureka客户端配置</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span>  <span class="comment">// 开启Feign默认配置</span></span><br><span class="line"><span class="meta">@EnableHystrix</span>  <span class="comment">// 开启Hystrix默认配置</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceFeignApplication</span> </span>&#123;｝</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment">// 业务类，Feign接口，fallback 表明出现错误时，直接使用指定类中的方法快速失败</span></span><br><span class="line"><span class="meta">@FeignClient</span>(value = <span class="string">"service-hi"</span>,fallback = SchedualServiceHiHystric.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SchedualServiceHi</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/hi"</span>,method = RequestMethod.GET)</span><br><span class="line">    <span class="function">String <span class="title">sayHiFromClientOne</span><span class="params">(@RequestParam(value = <span class="string">"name"</span>)</span> String name)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现Feign接口，做快速失败处理</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SchedualServiceHiHystric</span> <span class="keyword">implements</span> <span class="title">SchedualServiceHi</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHiFromClientOne</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"sorry "</span>+name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="Hystrix-Dashboard"><a href="#Hystrix-Dashboard" class="headerlink" title="Hystrix Dashboard"></a>Hystrix Dashboard</h3><ol><li><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-hystrix-dashboard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableEurekaClient</span>  <span class="comment">// 配置在启动类上面，开启Eureka客户端配置</span></span><br><span class="line"><span class="meta">@EnableHystrix</span>  <span class="comment">// 开启Hystrix默认配置</span></span><br><span class="line"><span class="meta">@EnableHystrixDashboard</span>  <span class="comment">// 开启HystrixDashboard默认配置</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceRibbonApplication</span> </span>&#123;</span><br></pre></td></tr></table></figure></li><li><p>访问视图</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:&#123;server.prot&#125;/hystrix</span><br><span class="line"></span><br><span class="line">分别输入:</span><br><span class="line">http://localhost:&#123;server.prot&#125;/hystrix.stream</span><br><span class="line">2000</span><br><span class="line">miya（这个随意）</span><br></pre></td></tr></table></figure></li></ol><h3 id="Zuul"><a href="#Zuul" class="headerlink" title="Zuul"></a>Zuul</h3><ol><li><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Eureka --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Zuul --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zuul<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Web依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 应用名称</span><br><span class="line">spring.application.name=service-zuul</span><br><span class="line"># 服务端口</span><br><span class="line">server.port=8769</span><br><span class="line"># 配置默认注册地址（Eureka服务端地址）</span><br><span class="line">eureka.client.service-url.defaultZone=http://localhost:8761/eureka/</span><br><span class="line"></span><br><span class="line"># zuul 路由配置</span><br><span class="line"># /api-a/ 开头的请求，都转发给 service-ribbon 服务</span><br><span class="line">zuul.routes.api-a.path=/api-a/**</span><br><span class="line">zuul.routes.api-a.service-id=service-ribbon</span><br><span class="line"></span><br><span class="line"># /api-b/ 开头的请求，都转发给 service-feign 服务</span><br><span class="line">zuul.routes.api-b.path=/api-b/**</span><br><span class="line">zuul.routes.api-b.service-id=service-feign</span><br></pre></td></tr></table></figure></li><li><p>配置注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableZuulProxy</span>  <span class="comment">// 开启Zuul默认配置</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span>  <span class="comment">// // 开启Eureka客户端默认配置</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceZuulApplication</span> </span>&#123;</span><br></pre></td></tr></table></figure></li></ol><h3 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h3><h4 id="服务端-1"><a href="#服务端-1" class="headerlink" title="服务端"></a>服务端</h4><ol><li><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-config-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 服务名称</span><br><span class="line">spring.application.name=config-server</span><br><span class="line"># 服务端口</span><br><span class="line">server.port=8888</span><br><span class="line"># eureka 注册到Eureka</span><br><span class="line">eureka.client.service-url.defaultZone=http://localhost:8761/eureka/</span><br><span class="line"></span><br><span class="line"># git仓库地址</span><br><span class="line">spring.cloud.config.server.git.uri=https://github.com/dengweiqiang/SpringCloudConfig/</span><br><span class="line"># 仓库路径</span><br><span class="line">spring.cloud.config.server.git.search-paths=repository</span><br><span class="line"># 仓库分支</span><br><span class="line">spring.cloud.config.label=master</span><br><span class="line"># 公有仓库不需要填写，私有仓库需要填写</span><br><span class="line">spring.cloud.config.server.git.username=your username</span><br><span class="line">spring.cloud.config.server.git.password=your password</span><br></pre></td></tr></table></figure></li><li><p>配置注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableConfigServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigServerApplication</span> </span>&#123;</span><br></pre></td></tr></table></figure></li><li><p>Http请求地址和资源文件映射如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># application 应用名称</span><br><span class="line"># profile 开发环境</span><br><span class="line"># label 分支</span><br><span class="line"># 例如： zuul-dev.properties 文件，对应的访问Uri为: /zuul/dev</span><br><span class="line">/&#123;application&#125;/&#123;profile&#125;[/&#123;label&#125;]</span><br><span class="line">/&#123;application&#125;-&#123;profile&#125;.yml</span><br><span class="line">/&#123;label&#125;/&#123;application&#125;-&#123;profile&#125;.yml</span><br><span class="line">/&#123;application&#125;-&#123;profile&#125;.properties</span><br><span class="line">/&#123;label&#125;/&#123;application&#125;-&#123;profile&#125;.properties</span><br></pre></td></tr></table></figure></li></ol><h4 id="客户端-1"><a href="#客户端-1" class="headerlink" title="客户端"></a>客户端</h4><ol><li><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Config --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Web依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 应用名称</span><br><span class="line">spring.application.name=service-zuul</span><br><span class="line"># 服务端口</span><br><span class="line">server.port=8769</span><br><span class="line"># 配置默认注册地址（Eureka服务端地址）</span><br><span class="line">eureka.client.service-url.defaultZone=http://localhost:8761/eureka/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 配置中心</span><br><span class="line">#spring.cloud.config.uri=http://CONFIG-SERVER:8888/</span><br><span class="line">spring.cloud.config.label=master</span><br><span class="line"># 激活dev环境配置，配置文件在git仓库里面</span><br><span class="line">spring.cloud.config.profile=dev</span><br><span class="line"># 是否从配置中心读取文件</span><br><span class="line">spring.cloud.config.discovery.enabled=true</span><br><span class="line"># 配置中心的ServerId，即服务名</span><br><span class="line">spring.cloud.config.discovery.service-id=CONFIG-SERVER</span><br><span class="line"></span><br><span class="line"># 配置重试机制</span><br><span class="line">spring.cloud.config.retry.initial-interval=2000</span><br><span class="line">spring.cloud.config.retry.max-attempts=2000</span><br><span class="line">spring.cloud.config.retry.max-interval=2000</span><br><span class="line">spring.cloud.config.retry.multiplier=1.2</span><br><span class="line">spring.cloud.config.fail-fast=true</span><br></pre></td></tr></table></figure></li><li><p>配置注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableZuulProxy</span></span><br><span class="line"><span class="meta">@RefreshScope</span><span class="comment">// 动态刷新配置</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceZuulApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ServiceZuulApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对于zuul的动态配置，必须主动向Ioc注册Bean，并且加上@RefreshScope</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@RefreshScope</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties</span>(<span class="string">"zuul"</span>)</span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ZuulProperties <span class="title">zuulProperties</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ZuulProperties();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>别忘记那些人那些事</title>
      <link href="/2020/04/24/%E5%88%AB%E5%BF%98%E8%AE%B0%E9%82%A3%E4%BA%9B%E4%BA%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
      <url>/2020/04/24/%E5%88%AB%E5%BF%98%E8%AE%B0%E9%82%A3%E4%BA%9B%E4%BA%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
      <content type="html"><![CDATA[<p>武汉疫情慢慢结束，但是疫情中发生的一些事情不应该就这么被忘记，所以转载这篇文章记录一下。</p><p>在四月底的这个时间点来看，有几个事情也应该被记住，疫情大爆发时的以李文亮为代表的几个“造谣”医生被传唤，到大爆发后（这篇文章所说的事情基本在这个时间段），疫情趋于结束时对“方方”的可耻批判。（几乎是对所有读过方方日记的人的愚弄，想过他们坏，没想到这么坏，指鹿为马很有意思么，fuck）</p><p>转载自：@玛丽莲梦六，网传作者被请去喝茶了。</p><a id="more"></a><p>那个坐在阳台上敲锣鸣病的人。</p><p>那个深夜追着殡车凄厉地喊着“妈妈”的人。</p><p>那个开着货车在高速路上流离失所没有归处的人。</p><p>那个坐着死去被家人抱住头等待殡葬车的人。</p><p>那个隔离在家中被饿死的人。</p><p>那个怀有身孕花了20万最终因无力承担而被放弃治疗的人。</p><p>那个怕传染给家人而给自己挖好坟偷偷上吊的人。</p><p>那个无处就医又怕传染妻小从桥上一跃而下自我了断的人。</p><p>那个90岁高龄为60多岁儿子排到一张床位而在医院守了五天五夜的人。</p><p>那个在求医院床位的微博下评论：“我家人刚过世了，空出一个床位，希望能帮到你”的人。</p><p>那个先是骂着求助者嚎丧影响心情随后又只能以同样方式呼救的人。</p><p>那个为求助而现学会用微博发了一句你好的人。</p><p>那个被盘查时用围巾捂住嘴，因买不到口罩而羞愧哭泣的人。</p><p>那个用橘子皮当口罩的人。</p><p>那个爸爸妈妈爷爷奶奶全家都死了只好孤身一人去民政局报到的人。</p><p>那个把抵工钱的口罩全部捐出去的人。</p><p>那个写下“安心赴死”“是时候奉献出自己”的人。</p><p>那个写下“能、明白”并印上红手印死了两次的人。</p><p>那个不眠不休建设完火神山医院返回村里，却被自己村人视为瘟神的人。</p><p>那个身患白血病需要去北京进行骨髓移植，却没有途径出城，痛到想要安乐死的人。</p><p>那个穿着寿衣打电话求一张床位未果，崩溃倒下的人。</p><p>那个因疫情做不了血液透析，在社区门口哀求无果跳楼自杀，自杀后6小时遗体才被拉走的人。</p><p>那个被派出所罚写100遍《出门一定要戴口罩》的人。</p><p>那个未戴口罩被扇巴掌扇出血的人。</p><p>那个喊着我饿啊我要饿死了，老婆孩子都在家挨饿，想必你们肚子是饱的吧的人。</p><p>那个以养蜂为生、因疫情导致蜜蜂无法转场最后自杀的人。</p><p>那个为了外出谋生，长途跋涉13天，徒步700多公里，睡桥洞睡草窝，打工的地方是煤矿人。</p><p>那个无处收治怕感染老婆孩子，写下遗书想将自己的遗体用于科学研究，愿天下人不再受病痛折磨，而后留下钥匙和手机离家出走，最后死在回老家途中的人。</p><p>那个写下“死后遗体捐给国家。我老婆呢？”的人。</p><p>那个因为封城禁车只好背着妈妈四处问诊，一路走了三个小时的人。</p><p>那个把刚出生的孩子托付给医院，写下“生孩子已花光仅有的积蓄，走投无路流落至此”的人。</p><p>那个为了出门买肉，从10楼爬下来的人。</p><p>那个守着爷爷的尸体过了5天，并给爷爷盖上被子的孩子。</p><p>那个重症被治愈后回家发现家人都去世了，在楼顶上吊自杀了。</p><p>那个60多岁独自一人承担派出所60多个警察的采购、洗菜、做菜、洗碗、打扫厨房，最后累到在走廊里哭的人。</p><p>那个在武汉街头流浪了20多天，头发白了一半的人。</p><p>那个没钱买手机上网课，而将妈妈治疗精神疾病的药物一把吞下的人。</p><p>那个25岁从央视辞职，在最危险的时候去武汉直播，对着门外将要把他带走的人，背诵少年强则国强，少年弱则国弱的人。</p><p>那个在领导检查时，在楼上大喊“都是假的”的人。</p><p>那个从坍塌的泉州酒店救出三个孩子尸体后大哭的人。</p><p>那个写下60篇封城日记，被封号数次，被群氓围殴谩骂的人。</p><p>那个只有七八岁懵懂跟随大人队伍里为父母领取骨灰的人。</p><p>那个苦口婆心有理有据给政府公务人员打电话说病毒要防、人也要吃饭，最后轻轻叹了口气的人。</p><p>那个深受病人爱戴，因戴口罩而被医院训斥，后感染病毒死去的人。</p><p>那个说出“早知道有今天，我管他批评不批评，老子到处说”的人。</p>]]></content>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo常用命令小结</title>
      <link href="/2020/04/14/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B0%8F%E7%BB%93/"/>
      <url>/2020/04/14/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B0%8F%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>最近开始重新使用Hexo写博客，但是有一些常用的命令又时常想不起来，所以写下这篇文章总结一下Hexo常用的命令。</p><a id="more"></a><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo n "新的博客"#新建博客</span><br><span class="line">hexo g &amp; hexo s   #编译并运行</span><br><span class="line">hexo g &amp; hexo d   #编译并部署</span><br><span class="line">------------------------------------</span><br><span class="line">git add .          #添加所有修改的文件</span><br><span class="line">git commit -m ""   #提交说明</span><br><span class="line">git branch -a      #查看所有分支</span><br><span class="line">git push --set-upstream origin hexo_bak  #推送到指定分支</span><br></pre></td></tr></table></figure><h3 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">"我的博客"</span> =&gt; hexo new <span class="string">"我的博客"</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo p =&gt; hexo publish</span><br><span class="line">hexo g =&gt; hexo generate<span class="comment">#生成</span></span><br><span class="line">hexo s =&gt; hexo server <span class="comment">#启动服务预览</span></span><br><span class="line">hexo d =&gt; hexo deploy<span class="comment">#部署</span></span><br></pre></td></tr></table></figure><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。</span><br><span class="line">hexo server -s #静态模式</span><br><span class="line">hexo server -p 5000 #更改端口</span><br><span class="line">hexo server -i 192.168.1.1 #自定义 IP</span><br><span class="line"></span><br><span class="line">hexo clean #清除缓存 网页正常情况下可以忽略此条命令</span><br><span class="line">hexo g #生成静态网页</span><br><span class="line">hexo d #开始部署</span><br></pre></td></tr></table></figure><h3 id="设置文章摘要"><a href="#设置文章摘要" class="headerlink" title="设置文章摘要"></a>设置文章摘要</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">以上是文章摘要 &lt;!--more--&gt; 以下是余下全文</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git推送项目到GitHub</title>
      <link href="/2020/04/14/Git%E6%8E%A8%E9%80%81%E9%A1%B9%E7%9B%AE%E5%88%B0GitHub/"/>
      <url>/2020/04/14/Git%E6%8E%A8%E9%80%81%E9%A1%B9%E7%9B%AE%E5%88%B0GitHub/</url>
      <content type="html"><![CDATA[<p>使用Git推送项目到Github，这个功能非常常用，所以记录下来。</p><a id="more"></a><h3 id="…or-create-a-new-repository-on-the-command-line"><a href="#…or-create-a-new-repository-on-the-command-line" class="headerlink" title="…or create a new repository on the command line"></a>…or create a new repository on the command line</h3><p>从本地仓库推项目到远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;# springboot_crud&quot; &gt;&gt; README.md</span><br><span class="line">git init  #初始化本地仓库</span><br><span class="line">git add . #添加全部已经修改</span><br><span class="line">git commit -m &quot;first commit&quot; #提交说明，将修改文件提到本地仓库</span><br><span class="line">git remote add origin https://github.com/dengweiqiang/springboot_crud.git  #连接到远程仓库</span><br><span class="line">git push -u origin master  #将本地代码强制推送到origin仓库中的master分支</span><br></pre></td></tr></table></figure><h3 id="…or-push-an-existing-repository-from-the-command-line"><a href="#…or-push-an-existing-repository-from-the-command-line" class="headerlink" title="…or push an existing repository from the command line"></a>…or push an existing repository from the command line</h3><p>从命令行推送现有的库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/dengweiqiang/springboot_crud.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SpringBoot项目CRUD实践</title>
      <link href="/2020/04/14/SpringBoot%E9%A1%B9%E7%9B%AECRUD%E5%AE%9E%E8%B7%B5/"/>
      <url>/2020/04/14/SpringBoot%E9%A1%B9%E7%9B%AECRUD%E5%AE%9E%E8%B7%B5/</url>
      <content type="html"><![CDATA[<p>使用SpringBoot做的一个CRUD的手脚架，并且提供了数据库密码的加密功能。</p><a id="more"></a><h3 id="项目准备"><a href="#项目准备" class="headerlink" title="项目准备"></a>项目准备</h3><ol><li>进入“<a href="https://start.spring.io/”构建SpringBoot项目；" target="_blank" rel="noopener">https://start.spring.io/”构建SpringBoot项目；</a></li><li>选择“Web”、“MySQL”、“Mybatis”模块；</li><li>导入项目到idea；</li></ol><h2 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h2><ol><li><p>新建数据库；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create database test;</span><br><span class="line">use test;</span><br></pre></td></tr></table></figure></li><li><p>新建表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- create table `account`</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="string">`account`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`account`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`money`</span> <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">4</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`account`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'aaa'</span>, <span class="string">'1000'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`account`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'bbb'</span>, <span class="string">'1000'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`account`</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'ccc'</span>, <span class="string">'1000'</span>);</span><br></pre></td></tr></table></figure></li></ol><h3 id="配置数据库连接"><a href="#配置数据库连接" class="headerlink" title="配置数据库连接"></a>配置数据库连接</h3><p>application.properties文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC</span><br><span class="line"># ENC() 是数据库加密函数</span><br><span class="line">spring.datasource.username=ENC(YMoG7LZvcKq3DbW3dc9Ltg==)</span><br><span class="line">spring.datasource.password=ENC(RgqVyviuib6ScIcgcQr9SA==)</span><br><span class="line">spring.datasource.driver-class-name=com.mysql.jdbc.Driver</span><br><span class="line"># jasypt加密的盐值</span><br><span class="line">jasypt.encryptor.password=erp</span><br><span class="line"># 开启debug</span><br><span class="line">debug=true</span><br><span class="line"># 控制台打印SQL</span><br><span class="line">logging.level.top.dengwq.springboot_crud.mapper=debug</span><br></pre></td></tr></table></figure><h3 id="Entity"><a href="#Entity" class="headerlink" title="Entity"></a>Entity</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id ;</span><br><span class="line">    <span class="keyword">private</span> String name ;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> money;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Mapper"><a href="#Mapper" class="headerlink" title="Mapper"></a>Mapper</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountMapper</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Insert</span>(<span class="string">"insert into account(name, money) values(#&#123;name&#125;, #&#123;money&#125;)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(@Param(<span class="string">"name"</span>)</span> String name, @<span class="title">Param</span><span class="params">(<span class="string">"money"</span>)</span> <span class="keyword">double</span> money)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Update</span>(<span class="string">"update account set name = #&#123;name&#125;, money = #&#123;money&#125; where id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(@Param(<span class="string">"name"</span>)</span> String name, @<span class="title">Param</span><span class="params">(<span class="string">"money"</span>)</span> <span class="keyword">double</span> money, @<span class="title">Param</span><span class="params">(<span class="string">"id"</span>)</span> <span class="keyword">int</span>  id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Delete</span>(<span class="string">"delete from account where id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select id, name as name, money as money from account where id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function">Account <span class="title">findAccount</span><span class="params">(@Param(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select id, name as name, money as money from account"</span>)</span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAccountList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountMapper accountMapper;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(String name, <span class="keyword">double</span> money)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountMapper.add(name, money);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(String name, <span class="keyword">double</span> money, <span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountMapper.update(name, money, id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountMapper.delete(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findAccount</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountMapper.findAccount(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAccountList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountMapper.findAccountList();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/account"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/list"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">getAccounts</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountService.findAccountList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/&#123;id&#125;"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">getAccountById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountService.findAccount(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/&#123;id&#125;"</span>, method = RequestMethod.PUT)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">updateAccount</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id, @<span class="title">RequestParam</span><span class="params">(value = <span class="string">"name"</span>, required = <span class="keyword">true</span>)</span> String name,</span></span><br><span class="line"><span class="function">                                @<span class="title">RequestParam</span><span class="params">(value = <span class="string">"money"</span>, required = <span class="keyword">true</span>)</span> <span class="keyword">double</span> money) </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> t= accountService.update(name,money,id);</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"fail"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/&#123;id&#125;"</span>, method = RequestMethod.DELETE)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">(@PathVariable(value = <span class="string">"id"</span>)</span><span class="keyword">int</span> id) </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> t= accountService.delete(id);</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"fail"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">""</span>, method = RequestMethod.POST)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">postAccount</span><span class="params">(@RequestParam(value = <span class="string">"name"</span>)</span> String name,</span></span><br><span class="line"><span class="function">                              @<span class="title">RequestParam</span><span class="params">(value = <span class="string">"money"</span>)</span> <span class="keyword">double</span> money) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> t= accountService.add(name,money);</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"fail"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="加密组件"><a href="#加密组件" class="headerlink" title="加密组件"></a>加密组件</h3><ol><li><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.ulisesbocchio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jasypt-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>添加盐值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># jasypt加密的盐值</span><br><span class="line">jasypt.encryptor.password=erp</span><br></pre></td></tr></table></figure></li><li><p>明文加密</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* ulisesbocchio 加密组件</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getPass</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String name = encryptor.encrypt(<span class="string">"root"</span>);</span><br><span class="line">    String password = encryptor.encrypt(<span class="string">"123456"</span>);</span><br><span class="line">    System.out.println(<span class="string">"Name加密后明文: "</span> + name);</span><br><span class="line">    System.out.println(<span class="string">"Password加密后明文: "</span> + password);</span><br><span class="line">    Assert.assertTrue(name.length() &gt; <span class="number">0</span>);</span><br><span class="line">    Assert.assertTrue(password.length() &gt; <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用（application.properties）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ENC() 是数据库加密函数</span><br><span class="line">spring.datasource.username=ENC(YMoG7LZvcKq3DbW3dc9Ltg==)</span><br><span class="line">spring.datasource.password=ENC(RgqVyviuib6ScIcgcQr9SA==)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《黑镜》</title>
      <link href="/2020/03/31/%E3%80%8A%E9%BB%91%E9%95%9C%E3%80%8B/"/>
      <url>/2020/03/31/%E3%80%8A%E9%BB%91%E9%95%9C%E3%80%8B/</url>
      <content type="html"><![CDATA[<p>这部剧吸引我的地方就是每一集都会引发你对剧中问题的思考，为什么他会这么做，这样对不对，现实中存在这种情况么，假如真的发生了这样的事情该怎么办。</p><a id="more"></a><h3 id="第一季"><a href="#第一季" class="headerlink" title="第一季"></a>第一季</h3><h4 id="ep01"><a href="#ep01" class="headerlink" title="ep01"></a>ep01</h4><p>这场艺术最后成功了么，如果他是想改变什么，应该说它失败了，如果他是想证明什么，那么他确实成功了。</p><p>一根断指的出现，使得民意发生了180度的转弯，民意真的正确么，真的应该完全跟随民意么。</p><p>为一个疯子套上艺术家的身份后，似乎一切都可以解释为行为艺术了，他死亡，是这件事情更为讽刺。（艺术的边界是什么）</p><p>对媒体的讽刺也极具讽刺，媒体为了报道可以不惜一切代价。</p><h4 id="ep02"><a href="#ep02" class="headerlink" title="ep02"></a>ep02</h4><p>下等的清洁工，中等的蹬单车，上等的做评委，上一等级的不把下一等级的当人看，下一等级的维护者上等人的生活，这就是一个物化了的真实社会。</p><p>个人的有意识行为，会被群体的无意识行为所代替。</p><p>评委时催眠师，观众是傀儡，它们的大脑是瘫痪的，都被催眠指引向了同一方向。</p><p>无论是喝了迷药的，还是没有喝迷药的，他们最终的结果都是一样的。（讽刺，对英雄更加尊敬了）</p><p>我们都成了我们最讨厌的样子。他曾那么想改变这个世界，确终于被这个世界所改变。</p><p>不忘初心，方得始终，你我共勉。</p><h4 id="ep03"><a href="#ep03" class="headerlink" title="ep03"></a>ep03</h4><p>当记忆不再是记忆，而是记录时，失忆成了一种解脱，遗忘成了一种自我保护。</p><p>只因记忆时生存的证明。（记忆粒广告语）</p><p>当一个人拥有着和我一样的记忆，那么这个人是我么？或者说，如果记忆可以复制，那么人是不是永生了呢？（思考）</p><p>找回记忆不难，那找回自我呢？</p><h3 id="第二季"><a href="#第二季" class="headerlink" title="第二季"></a>第二季</h3><h4 id="ep01-1"><a href="#ep01-1" class="headerlink" title="ep01"></a>ep01</h4><p>画画都用电子的了么，而且画板和真的一样。</p><p>他死了，对他最大的尊重，就是让他死了吧，而不是找个人或东西来代替他。</p><p>你不说我也不说。（听起来好恐怖）</p><p>你好脆弱啊。（产生了同情，只有平等时，才会有这种情感，她已经迷失了，逐渐分不清这是人还是机器了）</p><p>我们有无数可机会可以在它弱小是摧毁它，可是我们却什么也没有做，任由欲望控制着我们。</p><p>有些东西是机器很难学会的，比如自主意识，要不要这样做，考虑要不要这样做的标准很多时候是感觉，而不是利害关系，更主要的是人与人之间的平等，很明显这个机器人不具备这一点，或者设计者不想让它具备这一点。</p><p>从某种意义上来说，是不是她把自己困在了里面，走不出来了，但可以感觉到她和她的女儿明白了某种界限。</p><h4 id="ep02-1"><a href="#ep02-1" class="headerlink" title="ep02"></a>ep02</h4><p>为什么都在窗口？</p><p>女主不记得自己是谁了，小女孩拿着相机拍照。</p><p>人人都拿着相机，却无人拯救她，这是讽刺全民自媒体时代么。</p><p>围观是不是更恐怖呢？</p><p>看着剧场围观的人，与女主有什么不一样呢，好人与坏人总要有点不一样吧。</p><h4 id="ep03-1"><a href="#ep03-1" class="headerlink" title="ep03"></a>ep03</h4><p>看这个儿童教育节目，也不怎么样么。</p><p>可怕的不是有政治立场的人，而是无政治立场虚拟人物，因为它什么也不会，也不能改变。</p><h3 id="圣诞特别篇"><a href="#圣诞特别篇" class="headerlink" title="圣诞特别篇"></a>圣诞特别篇</h3><p>人们想要被关注，他们不想被排斥，不想让自己没有存在感。 </p><p>就像当你准备跳进游泳池的时候，你会担心，水是不是太凉了，但你明白，等你跳下去之后一切都会没事，让你退缩不前的是对于刺激的恐惧。</p><p>人，总得找些什么事情做，总得去寻找“意义”，他无法忍受独自一人关禁闭般的生活，那样会使他彻底崩溃，陷入虚无。唯有通过日复一日的劳作，我们才能把自己的生活填满。</p><p>感觉被所有人屏蔽应该是最严酷的惩罚了。</p><h3 id="第三季"><a href="#第三季" class="headerlink" title="第三季"></a>第三季</h3><h4 id="ep01-2"><a href="#ep01-2" class="headerlink" title="ep01"></a>ep01</h4><p>给人打分，给所有人打分，所有人给对方打分，每个人都能看到你的分数，这是要干啥。</p><p>这是生活在真实世界中的，而不是生活在社交中，物化的对人类社会互联网的讽刺么。</p><p>人生不应该评分，每个人都是独一无二的，能给自己评分的只能是你自己。</p>]]></content>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《俗女养成记》</title>
      <link href="/2020/03/31/%E3%80%8A%E4%BF%97%E5%A5%B3%E5%85%BB%E6%88%90%E8%AE%B0%E3%80%8B/"/>
      <url>/2020/03/31/%E3%80%8A%E4%BF%97%E5%A5%B3%E5%85%BB%E6%88%90%E8%AE%B0%E3%80%8B/</url>
      <content type="html"><![CDATA[<p>19年真是台剧的丰收年，上半年《我们与恶的距离》，下半年《想见你》，现在再加上这部剧。很难想象一个女人到了四十岁依然能够这么勇敢，看到后面才一点一点理解她的决定，正是童年时爷爷奶奶，父母的悉心呵护才有如今勇敢的陈嘉玲。</p><blockquote><p>我不是好人，也不是坏人，我只是需要一个爱我的人，好命跟歹命，春夏跟秋冬，跟他一人一半。</p></blockquote><a id="more"></a><h3 id="ep01"><a href="#ep01" class="headerlink" title="ep01"></a>ep01</h3><p>有些时候，小孩子的求生意志是很惊人的。</p><p>我从来不曾想过，一个三十岁的女人不想结婚，竟然会掀起如此打的风暴，那力道之大，让我的二姑姑终生未嫁。</p><h3 id="ep02"><a href="#ep02" class="headerlink" title="ep02"></a>ep02</h3><p>大表姐每次来，妈妈都要我穿新衣，她自己也是。长大后，我才明白，竞争是女人一出生就会的功夫。</p><p>真的有必要什么都要比么，为什么要比呢。</p><p>自己人终究还是自己人，客人是客人，是不一样的。</p><h3 id="ep03"><a href="#ep03" class="headerlink" title="ep03"></a>ep03</h3><p>在那个时候我仿佛看到了我恐怖的后半生。（婆婆恐惧症）</p><p>干嘛这样，我们也是好意啊。（嘉玲似乎明白了什么）</p><p>谈恋爱的时候，你听歌的时候，歌都会变得很好听，树木，花朵，不管什么东西都会变得很漂亮。（这种形容很有意思）</p><blockquote><p>世界上最远的距离，不是我不能说我爱你</p><p>而是想你痛彻心脾，却只能深埋心底</p><p>世界上最远的距离，不是我不能说我想你</p><p>而是彼此相爱，却不能够在一起</p><p>世界上最远的距离，不是彼此相爱却不能够在一起</p><p>而实明知道真爱无敌，却装作毫不在意</p><p>—- 片中阿娟写给阿诚的信</p></blockquote><p>也许这件事情对于孩子的伤害是终生的，不仅影响了当事人，对于旁观者也是一种伤害。</p><p>父母对孩子不仅要有相对科学的性教育，应该还要要正确的爱教育。</p><h3 id="ep04"><a href="#ep04" class="headerlink" title="ep04"></a>ep04</h3><p>不必让孩子最好，不要让他最不一样是父母的责任。</p><p>你会发现，大人老是不愿意听小孩子的意见，以为他们什么都不懂，受苦的其实还是小孩子自己，知道错误后也不愿意公开承认错误，自己死要面子让家人活受罪。（小嘉玲咸鱼事件）</p><p>奶奶说，你要自己会想，妈妈说，你要自己会判断。</p><p>想起了孙杨听证会事件，想起了巨婴症，已经是两个孩子的爸爸了，对于从未学过医的母亲的话不敢反驳，我们的教育是不是出了什么问题。（帝爷公药方事件）</p><p>为什么遇到事情总是推卸自己的责任的，我也是如此么，我不要这个样子。</p><p>做一个聪明的孩子，也是有方法的，有的时候，你要找一个地方，毁尸灭迹；有的时候，你要算好时机，瞒天过海；更有的时候，你要心狠一点，辜负爸爸的爱。不听话会被人揍，听话也不一定有好下场。听话还是不听话，生存还是毁灭，这是个重大的问题。</p><h3 id="ep05"><a href="#ep05" class="headerlink" title="ep05"></a>ep05</h3><p>可能这就是成熟女性吧，勇于拒绝，多了许多魅力。</p><p>大人的一个玩笑，却被孩子深信不疑。</p><p>说话要抓重点，不要想说什么说什么，没人听得懂的，徒增笑料。</p><blockquote><p>今天的风湿湿的</p><p>今天的天暗暗的</p><p>今天的我需要一个人</p><p>来陪我风吹雨淋</p><p>人生就像一场梦</p><p>你是我最美的梦</p><p>你是台风天 冒烟的泡面</p><p>你是我最爱的人</p><p>若是有你和我做伴</p><p>有钱贫穷我都没差</p><p>拿着雨伞等待雨散</p><p>我要牵你的手 牵到手红红</p><p>– 旺福的《等待雨散》</p></blockquote><h3 id="ep06"><a href="#ep06" class="headerlink" title="ep06"></a>ep06</h3><p>悲伤五阶段：否认、愤怒、协商（讨价还价）、忧郁（抑郁）、接受。</p><h3 id="ep07"><a href="#ep07" class="headerlink" title="ep07"></a>ep07</h3><blockquote><p>这个年纪要奶奶替我安排相亲</p><p>妈妈帮我找工作</p><p>爸爸怕我…没钱</p><p>我是没用的人，让你们失望了</p></blockquote><p>你知道你女儿很有天分吗？应该比我更有天分。（情商啊）</p><h3 id="ep08"><a href="#ep08" class="headerlink" title="ep08"></a>ep08</h3><blockquote><p>生命会找到自己的出路。    ——《侏罗纪公园》</p></blockquote><p>到底是命运决定了我们的方向，还是我们自己决定了命运。</p><h3 id="ep09"><a href="#ep09" class="headerlink" title="ep09"></a>ep09</h3><p>走到人生这个阶段，不再见不一定是坏事，有时候清清楚楚，轻轻放下或许更好。</p><h3 id="ep10"><a href="#ep10" class="headerlink" title="ep10"></a>ep10</h3><p>你觉得快乐是什么？你想过十年后的自己是什么样么？</p><p>成熟男女就是干脆啊。</p><blockquote><p>亲爱的陈嘉玲</p><p>你是从几时开始忘记了，忘记了这辈子其实很长，长到你可以跌倒再站起来，做梦有醒过来；</p><p>你又是从即使开始忘记了，这辈子其实很短，短到你没时间再去勉强自己，没时间再去讨厌你自己；</p><p>亲爱的陈嘉玲</p><p>从现在开始，从这里开始，不要再忘记了，我想要对你说：对不起，谢谢你，还有..我爱你。</p></blockquote>]]></content>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《想见你》</title>
      <link href="/2020/03/31/%E3%80%8A%E6%83%B3%E8%A7%81%E4%BD%A0%E3%80%8B/"/>
      <url>/2020/03/31/%E3%80%8A%E6%83%B3%E8%A7%81%E4%BD%A0%E3%80%8B/</url>
      <content type="html"><![CDATA[<p>《想见你》里面的几个主题：面对失去，面对成长，面对爱情，面对自我，面对世界</p><blockquote><p>莫俊杰，陈思源在面对困境时，都有人伸出援手，拯救了它们；假如有人在陈韶如，王诠胜他们遇到困境时伸出援手，是不是能够避免后面这些事情的发生呢。</p></blockquote><a id="more"></a><h4 id="第六集"><a href="#第六集" class="headerlink" title="第六集"></a>第六集</h4><p>莫俊杰看到黄雨萱对那幅画的表情后，肯定明白了，她已经不是他心中喜欢的那个女孩了</p><p>你喜欢的人，一定是你见过，听过的，看过的，某些品质或人</p><p>大哥哥我叫黄雨萱，你不可以忘记我哦（瓦特，这编剧脑洞大开啊）</p><h4 id="第七集"><a href="#第七集" class="headerlink" title="第七集"></a>第七集</h4><p>女主的眼泪说流就流，演技可以</p><h4 id="第八集"><a href="#第八集" class="headerlink" title="第八集"></a>第八集</h4><p>一直都是李子维和黄雨萱，没其他两个人啥事情</p><h4 id="第十集"><a href="#第十集" class="headerlink" title="第十集"></a>第十集</h4><p>它们真的能够改变过去么，又会以什么方式来改变呢，还是一切回零，继续循环</p><p>她等了两年已经如此难熬，他等了十五年，思考这一切，最后决定什么也不要改变，该发生的就让他发生</p><p>我们在一起总是能互相体谅，总是能牵着手，朝同一个方向前进。但不管距离多远，我们的心都是在一起的</p><p><strong>– Only if you asked to see me</strong><br><strong>– Our meeting would be meaningful to me</strong><br><strong>只有你想见我的时候，我们的相遇才有意义</strong></p><h4 id="第十一集"><a href="#第十一集" class="headerlink" title="第十一集"></a>第十一集</h4><p>两次离别，为何求死呢</p><p>原来哪些日记都是意有所指啊，做自己就好，不比学他人，邯郸学步，不如不学</p><p>这一切都是梦，我幻想一个我喜欢的人，刚好也喜欢我的梦</p><h4 id="第十二集"><a href="#第十二集" class="headerlink" title="第十二集"></a>第十二集</h4><p>我跟你们一样，我也不喜欢以前的自己。（泪目，可能这就是梦醒来的后遗症吧）</p><p>想到了变形记，那些主人公，回到了原来的环境，会对他的未来产生什么影响</p><h4 id="第十三集"><a href="#第十三集" class="headerlink" title="第十三集"></a>第十三集</h4><p>这就对了，历史根本不应该被改变</p><p>你想从这个世界消失，不是你对这个世界太失望，而是你对世界有太多的期望</p><p>被一个人放在心上，从来都不是理所当然的事情，不管那个人是谁，是家人，还是朋友，都是非常难得，应该被好好珍惜才对</p><p>最后这个场景，应该叫萝莉是怎样养成的</p><p>最后才知道，李子维的摩托为什么是那样的，原来是为了小黄雨萱啊</p>]]></content>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>几本小说</title>
      <link href="/2018/10/30/%E5%87%A0%E6%9C%AC%E5%B0%8F%E8%AF%B4/"/>
      <url>/2018/10/30/%E5%87%A0%E6%9C%AC%E5%B0%8F%E8%AF%B4/</url>
      <content type="html"><![CDATA[<p>最近利用工作闲时的时间看了几本小说，这些都是久经时间考验的书籍！</p><a id="more"></a><h2 id="《1984》"><a href="#《1984》" class="headerlink" title="《1984》"></a>《1984》</h2><p><img src="http://dengwq.oss-cn-hangzhou.aliyuncs.com/18-10-30/19740370.jpg" alt=""></p><blockquote><p>战争就是和平，自由就是奴役，无知就是力量。</p><p>控制过去就能控制未来，控制现在就能控制过去。</p><p>世界有真理也有缪误，如果你坚持真理，即使你的对手是全世界，你也不是疯子。</p><p>寡头统治的精髓不是父子继承，二十死去的一代将某种世界观和生活方式施加给或者的一代，使之延续下去。</p><p>没有一种感情是纯粹的，因为一切都夹杂着恐惧和仇恨。他们的拥抱是一场战斗，高潮是一次胜利。这是给党的沉重的一击。这是一次政治行为。</p></blockquote><hr><p>1984虽已早过去，但是这本书里的景象，依然值得人们警醒。</p><h2 id="《了不起的盖茨比》"><a href="#《了不起的盖茨比》" class="headerlink" title="《了不起的盖茨比》"></a>《了不起的盖茨比》</h2><p><img src="http://dengwq.oss-cn-hangzhou.aliyuncs.com/18-10-31/89042782.jpg" alt=""></p><blockquote><p>她认为我懂很多，因为我懂的和她懂的不一样。</p><p>咱们大家都应当学会在朋友活着的时候讲交情，而不要等到他死了之后。</p><p>你说过一个开车不小心的人只有在碰上另一个开车不小心的人之前才安全吧？瞧，我碰上了另一个开车不小心的人了，是不是？</p></blockquote><p><strong><em>在看同名电影的时候，时常想，盖茨比为什么了不起？了不起在哪里？</em></strong></p><hr><p>在读完书之后，我觉得可以把罗曼罗兰的那句话用在盖茨比身上——<strong>世上只有一种真正英雄主义，那就是认识生活的真相后依然爱它</strong>。</p><p>从五年的等待到事故当晚在黛西窗外整整一夜的守候，以及到后来成为她的独独的牺牲品，尽管他的幻梦以死亡作为结局，但他却是按照幻梦指的方向一直走。</p><h2 id="《基督山伯爵》"><a href="#《基督山伯爵》" class="headerlink" title="《基督山伯爵》"></a>《基督山伯爵》</h2><p><img src="http://dengwq.oss-cn-hangzhou.aliyuncs.com/18-10-31/8237027.jpg" alt=""></p><blockquote><p>这世上无所谓幸福，也无所谓不幸，有的只是一种境况和另一种境况的比较如此而已。只有体验过极度不幸的人，才能品尝到极度的幸福。</p></blockquote><hr><p>有人说这本小说在一百多年前文学界的地位，就如同如今的网络小说，看完这本书之后，我对此毫不怀疑。</p><h2 id="《白夜行》和《嫌疑人X的献身》"><a href="#《白夜行》和《嫌疑人X的献身》" class="headerlink" title="《白夜行》和《嫌疑人X的献身》"></a>《白夜行》和《嫌疑人X的献身》</h2><p><img src="http://dengwq.oss-cn-hangzhou.aliyuncs.com/18-10-31/46627563.jpg" alt=""></p><hr><p>之所以放在一起是因为，我觉得这两本书完全一个套路，并无二致。</p><p>一个人对异性毫无保留的付出，人们打把这种事情叫做“爱”，因为爱，所以可以原谅！</p><h2 id="《小王子》"><a href="#《小王子》" class="headerlink" title="《小王子》"></a>《小王子》</h2><p><img src="http://dengwq.oss-cn-hangzhou.aliyuncs.com/18-10-31/52352104.jpg" alt=""></p><blockquote><p>如果一个人爱上了一株花，而珠花只长在成千上万颗星星中的一颗上，那么观看星星就足以让这个人感到快乐。</p><p>只有心灵才能洞察一切，肉眼是看不到事物的本质的。</p><p>你要对你所有认熟过的事物永远负责，你要对你的那朵玫瑰花负责……</p></blockquote><hr><p>这是给大人们的童话！</p><p>应该没有人不喜欢狐狸吧，她是如此的勇敢！</p>]]></content>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>送给自己的礼物</title>
      <link href="/2018/10/30/%E9%80%81%E7%BB%99%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A4%BC%E7%89%A9/"/>
      <url>/2018/10/30/%E9%80%81%E7%BB%99%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A4%BC%E7%89%A9/</url>
      <content type="html"><![CDATA[<p>20岁了，在这之后的岁月里只能自己独自砥砺前行了，在这前方的路上，肯定不缺少挫折，愿自己如这场夜间慢跑一样咬牙坚持下去！</p><p><img src="http://dengwq.oss-cn-hangzhou.aliyuncs.com/18-10-30/72381751.jpg" alt=""></p>]]></content>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>红雀大战游骑兵</title>
      <link href="/2018/09/16/%E7%BA%A2%E9%9B%80%E5%A4%A7%E6%88%98%E6%B8%B8%E9%AA%91%E5%85%B5/"/>
      <url>/2018/09/16/%E7%BA%A2%E9%9B%80%E5%A4%A7%E6%88%98%E6%B8%B8%E9%AA%91%E5%85%B5/</url>
      <content type="html"><![CDATA[<p><img src="http://dengwq.oss-cn-hangzhou.aliyuncs.com/18-9-16/33119955.jpg" alt=""></p><p>常说不到最后一刻，你永远不知道结果是什么！2011年MLB季后赛总决赛“红雀对游骑兵”第六场，无疑是对这句话的最好诠释了。</p><a id="more"></a><h2 id="点球成金"><a href="#点球成金" class="headerlink" title="点球成金"></a>点球成金</h2><p>昨天晚上看了布拉德皮特的电影《点球成金》，让我对棒球提起了兴趣。首先是了解棒球的规则，常用术语，以及棒球赛。</p><p>根据哔哩哔哩UP主的推荐看了这场《红雀大战游骑兵》的第六场，其实2011赛季《红雀大战游骑兵》7场都相当精彩，但是这一场根据喜剧性，对于我这个入门小生而言看的也更加爽。</p><p>红雀五次落后五次追平，两次被打到赛点，两次两次加时赛，长达四个小时的赛事，让人就如看了一场富有传奇色彩的电影。</p>]]></content>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>东京爱情故事</title>
      <link href="/2018/09/10/%E4%B8%9C%E4%BA%AC%E7%88%B1%E6%83%85%E6%95%85%E4%BA%8B/"/>
      <url>/2018/09/10/%E4%B8%9C%E4%BA%AC%E7%88%B1%E6%83%85%E6%95%85%E4%BA%8B/</url>
      <content type="html"><![CDATA[<p><img src="http://dengwq.oss-cn-hangzhou.aliyuncs.com/18-9-10/71721542.jpg" alt=""></p><blockquote><p>正是因为不知道明天会发生什么事，才会充满希望不是吗？          – 赤名莉香</p></blockquote><a id="more"></a><h2 id="初见"><a href="#初见" class="headerlink" title="初见"></a>初见</h2><p>之前就从各种渠道听人推荐这部电视剧，豆瓣评分也保持着傲人的9.4分，但网上资源很少，各种百度云的链接大多早已失效，日剧的资源不知道为什么被查禁的很厉害。最近终于找到了这部电视剧的资源，所以连着三天就刷完了，不是我想看这么快，而是被剧情所吸引。</p><p>找到的资源说是720P的，可是年代久远，画面依然有些模糊不清。看多了现在电视电影的男女主角，不禁觉得30年前的靓男婧女们真是朴素到家了，好在这部久经时间考验的“青春偶像剧”不是光靠脸吃饭的。</p><h2 id="最好的开始，最好的结局"><a href="#最好的开始，最好的结局" class="headerlink" title="最好的开始，最好的结局"></a>最好的开始，最好的结局</h2><p>有时候再努力又如何，那扇门是不会仅仅因为你的努力而打开的，剧情里埋了很多莉香和完治最终会分手的伏笔，但最重要的原因恐怕就是，那份爱来的太容易了吧。</p><p>三上和长崎的结局，恐怕是最具童话气息的了。你来我往，一来二去，不知不觉就真的爱上了；三上像《毕业生》里的本恩那样，想带她从婚礼上离开;长崎也勇敢的放下所有，回来寻找三上， 加上之前人物的铺垫，让人不禁会相信他们会永远幸福。</p><p>完治和里美最终走到一起，恐怕是最好的结局了，就如《一一》里面南骏那样，他和阿瑞的那份爱只要放在心底，才是最美好的。</p><p>高中时代的好朋友，都有点喜欢对方，外加五年的等候，中间的艰难抉择，终于修成正果，这不管在哪里都是大圆满的结局了。奈何半路遇到个赤名莉香，莉香那对生活的态度，那份真挚的笑容，以及在爱情中的勇敢付出，都令我们心生向往，更深层的原因可能是深埋我们心底里那份信念——有付出，应该有回报！莉香应该拥有这份感情。</p><p>所以对于里美算不上讨厌，但是对是莉香慢慢的总是慢慢的可惜，就算我知道，结局就是这样，这也是最好的结局，但还是有些失落，感谢网络上的UP主们，让我在这部电视诞生30年后依然能欣赏它，谢谢</p><p><strong>PS：但是日本的吃瓜群众在现实中向里美扔石头这种事情还是看不过去的；可要是在东京的街头碰见莉香请代我向她问好</strong></p><p><em>莉香那份真挚的笑容已经刻在了我的心里，相信短时间不会被抹去，不知道何时再看《东爱》，但希望是和那个她一起看。</em></p><p><img src="http://dengwq.oss-cn-hangzhou.aliyuncs.com/18-9-10/44995450.jpg" alt=""></p>]]></content>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>我曾七次鄙视自己的灵魂</title>
      <link href="/2018/08/22/%E6%88%91%E6%9B%BE%E4%B8%83%E6%AC%A1%E9%84%99%E8%A7%86%E8%87%AA%E5%B7%B1%E7%9A%84%E7%81%B5%E9%AD%82/"/>
      <url>/2018/08/22/%E6%88%91%E6%9B%BE%E4%B8%83%E6%AC%A1%E9%84%99%E8%A7%86%E8%87%AA%E5%B7%B1%E7%9A%84%E7%81%B5%E9%AD%82/</url>
      <content type="html"><![CDATA[<p><img src="http://dengwq.oss-cn-hangzhou.aliyuncs.com/18-8-22/91516578.jpg" alt=""></p><blockquote><p>良多一直想成为自己理想中的那个人，但理想很丰满，现实很骨感，最终他变成了他最讨厌的那种人！<br>良多：“你以为可以很容易成为想象中的人，那就大错特错了！”</p></blockquote><a id="more"></a><p><strong>《我曾七次鄙视自己的灵魂》</strong></p><p>第一次，当他本可进取时，却故作谦卑；</p><p>第二次，当它空虚时，用爱欲来填充；</p><p>第三次，在困难和容易之间，它选择了容易；</p><p>第四次，它犯了错，却借由别人也会犯错来宽慰自己；</p><p>第五次，它自由软弱，却把它认为是生命的坚韧；</p><p>第六次，当它鄙夷一张丑恶的嘴脸时，却不知那正是自己面具中的一副；</p><p>第七次，它侧身于生活的污泥中虽不甘心，却又畏首畏尾。</p>]]></content>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>23种设计模式解析</title>
      <link href="/2018/08/22/23%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E8%A7%A3%E6%9E%90/"/>
      <url>/2018/08/22/23%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E8%A7%A3%E6%9E%90/</url>
      <content type="html"><![CDATA[<p><img src="http://dengwq.oss-cn-hangzhou.aliyuncs.com/18-8-22/30443178.jpg" alt=""></p><blockquote><p>设计模式(Design Pattern)是一套被反复使用、多数人知晓的、经过分类的、代码设计经验的总结。</p><p>使用设计模式的目的：为了代码可重用性、让代码更容易被他人理解、保证代码可靠性。设计模式使代码编写真正工程化；设计模式是软件工程的基石脉络，如同大厦的结构一样。</p></blockquote><a id="more"></a><h2 id="设计模式的分类"><a href="#设计模式的分类" class="headerlink" title="设计模式的分类"></a>设计模式的分类</h2><p>总体来说设计模式分为三大类：</p><p>创建型模式，共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。</p><p>结构型模式，共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。</p><p>行为型模式，共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。</p><p>其实还有两类：并发型模式和线程模式。用一个图片来整体描述一下：</p><p><img src="http://dengwq.oss-cn-hangzhou.aliyuncs.com/18-8-22/52453673.jpg" alt="http://dengwq.oss-cn-hangzhou.aliyuncs.com/18-8-22/52453673.jpg"></p><h2 id="设计模式的六大原则"><a href="#设计模式的六大原则" class="headerlink" title="设计模式的六大原则"></a>设计模式的六大原则</h2><h4 id="总原则：开闭原则-Open-Close-Principle"><a href="#总原则：开闭原则-Open-Close-Principle" class="headerlink" title="总原则：开闭原则(Open Close Principle)"></a>总原则：开闭原则(Open Close Principle)</h4><p>开闭原则就是说<strong>对扩展开放，对修改关闭</strong>。在程序需要进行拓展的时候，不能去修改原有的代码，而是要扩展原有代码，实现一个热插拔的效果。所以一句话概括就是：为了使程序的扩展性号，易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类等，后面具体设计中我们会提到这点。</p>]]></content>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>idea的使用技巧</title>
      <link href="/2018/08/20/idea%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2018/08/20/idea%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<blockquote><p>idea在Java领域的强大编辑能力是毋庸置疑的，这是我近期学习idea的一些总结！</p></blockquote><a id="more"></a><h2 id="高效定位代码"><a href="#高效定位代码" class="headerlink" title="高效定位代码"></a>高效定位代码</h2><h3 id="无处不在的跳转"><a href="#无处不在的跳转" class="headerlink" title="无处不在的跳转"></a>无处不在的跳转</h3><h4 id="项目间的跳转"><a href="#项目间的跳转" class="headerlink" title="项目间的跳转"></a>项目间的跳转</h4><table><thead><tr><th>功能</th><th>快捷键</th></tr></thead><tbody><tr><td>跳转到下一个项目窗口</td><td>Ctrl + Atl + ]</td></tr><tr><td>返回到上一个项目窗口</td><td>Ctrl + Atl + [</td></tr></tbody></table><h4 id="文件间的跳转"><a href="#文件间的跳转" class="headerlink" title="文件间的跳转"></a>文件间的跳转</h4><table><thead><tr><th>功能</th><th>快捷键</th></tr></thead><tbody><tr><td>最近的文件</td><td>Ctrl + E</td></tr><tr><td>最近编辑的文件</td><td>Ctrl + Shift + E</td></tr></tbody></table><h4 id="浏览修改位置的跳转"><a href="#浏览修改位置的跳转" class="headerlink" title="浏览修改位置的跳转"></a>浏览修改位置的跳转</h4><table><thead><tr><th>功能</th><th>快捷键</th></tr></thead><tbody><tr><td>最后一个修改位置</td><td>Ctrl + Shift + backspace</td></tr><tr><td>上一个浏览位置</td><td>Ctrl + Alt + 左箭头</td></tr><tr><td>下一个浏览位置</td><td>Ctrl + Alt + 右箭头</td></tr></tbody></table><h4 id="利用书签跳转"><a href="#利用书签跳转" class="headerlink" title="利用书签跳转"></a>利用书签跳转</h4><table><thead><tr><th>功能</th><th>快捷键</th></tr></thead><tbody><tr><td>添加书签</td><td>F11</td></tr><tr><td>添加带有标记的书签</td><td>Ctrl + F11</td></tr><tr><td>添加带有标记的书签</td><td>Ctrl + Shift + 数字或字母</td></tr><tr><td>跳转到带有标记的书签</td><td>Ctrl + 书签编号（见上一条）</td></tr><tr><td>书签总览</td><td>Shift + F11</td></tr></tbody></table><h4 id="字符串跳转之插件emacsIdea"><a href="#字符串跳转之插件emacsIdea" class="headerlink" title="字符串跳转之插件emacsIdea"></a>字符串跳转之插件emacsIdea</h4><p>首先到idear商店安装emacsIdea插件，设置emacsIDEAS插件的快捷键：打开搜索功能，输入keymap，右边搜索框输入acejumpword，新增一个快捷键。</p><table><thead><tr><th>功能</th><th>快捷键</th></tr></thead><tbody><tr><td>跳转需要查找的字符位置</td><td>Alt + J + 需要查找的字母</td></tr></tbody></table><h4 id="导航窗口的跳转"><a href="#导航窗口的跳转" class="headerlink" title="导航窗口的跳转"></a>导航窗口的跳转</h4><table><thead><tr><th>功能</th><th>快捷键</th></tr></thead><tbody><tr><td>快速寻找功能快捷键</td><td>Ctrl + Shift + A</td></tr><tr><td>编辑区和文件区来回跳转</td><td>Alt + 1 &amp; Esc</td></tr></tbody></table><h3 id="精准搜索"><a href="#精准搜索" class="headerlink" title="精准搜索"></a>精准搜索</h3><p>快捷键按两次可以全局搜索</p><table><thead><tr><th>功能</th><th>快捷键</th></tr></thead><tbody><tr><td>查找类</td><td>Ctrl + N</td></tr><tr><td>查找文件</td><td>Ctrl + Shift + N</td></tr><tr><td>查找符号</td><td>Chrl + Alt + Shift + N</td></tr><tr><td>查找字符串</td><td>Ctrl + Shift + F</td></tr></tbody></table><h2 id="代码小助手"><a href="#代码小助手" class="headerlink" title="代码小助手"></a>代码小助手</h2><h3 id="列操作"><a href="#列操作" class="headerlink" title="列操作"></a>列操作</h3><p>示例：使用建表语句快速创建枚举类</p><ol><li>选中单词 ==Ctrl + &gt;==</li><li>英文大小写切换 ==Ctrl + Shift + U==</li><li>对所有选中单词进行操作 ==Ctrl + Alt + Shift +J==</li></ol><h3 id="live-template"><a href="#live-template" class="headerlink" title="live template"></a>live template</h3><p>示例： main方法模板</p><ul><li>位置：菜单 –&gt; File –&gt; Setting –&gt; Editor –&gt; Live Templates</li><li>功能：定义模板，使用特定 “字符串” 快速敲击出某段代码</li><li>举例： psvm 敲出 public static void main(String[] args){ … }</li></ul><h3 id="postfix"><a href="#postfix" class="headerlink" title="postfix"></a>postfix</h3><p>示例：100.for</p><ul><li>位置： 菜单 –&gt; File –&gt; Setting –&gt; Editor –&gt; General –&gt; Postfix Completion</li><li>功能： 使用后缀，快速敲出代码块</li><li>举例： 100.fori 敲出 for(int i=0; i&lt;100; i++) {…}</li></ul><h3 id="alter-enter"><a href="#alter-enter" class="headerlink" title="alter + enter"></a>alter + enter</h3><ul><li>自动创建函数</li><li>自动生成参数化 String.format</li><li>实现接口</li><li>单词拼写，单词建议</li><li>导包</li></ul><h2 id="编译高质量代码"><a href="#编译高质量代码" class="headerlink" title="编译高质量代码"></a>编译高质量代码</h2><h3 id="重构"><a href="#重构" class="headerlink" title="重构"></a>重构</h3><ul><li>重构变量： Shift + F6</li><li>重构方法： Ctrl + F6</li></ul><h3 id="抽取"><a href="#抽取" class="headerlink" title="抽取"></a>抽取</h3><ul><li>抽取变量：Ctrl + Alt + V</li><li>抽取静态变量： Ctrl + Alt + C</li><li>抽取成员变量： Ctrl + Alt + F</li><li>抽取方法参数： Ctrl + Alt + P</li><li>抽取函数: Ctrl + Alt + M</li></ul><h2 id="关联一切"><a href="#关联一切" class="headerlink" title="关联一切"></a>关联一切</h2><h3 id="Spring的关联"><a href="#Spring的关联" class="headerlink" title="Spring的关联"></a>Spring的关联</h3><p>示例： 导入Spring的引用，通过bean查找实现类</p><ul><li>位置： 菜单 –&gt; File –&gt; Project Structure –&gt; Facets</li><li>功能： 帮助管理Spring容器。还提供了很多其他的管理，比如EJB</li><li>使用：<ol><li>点击 + 号，选择Spring，选择模块</li><li>在Spring中，点击 + 号，起一个名字，选择Spring配置文件。(SpringBoot中，选择类文件)</li><li>项目的各个文件中会出现Spring的Logo，其提供了很多功能。比如：查看该Bean是在哪里提供的。</li></ol></li></ul><h3 id="与数据库的关联"><a href="#与数据库的关联" class="headerlink" title="与数据库的关联"></a>与数据库的关联</h3><p>关联了数据库之后，如果需要重构字段或表名，不仅可以更改当前页面，还可以更改所有引用到该表的SQL以及数据库表名或字段。</p><h2 id="调试程序"><a href="#调试程序" class="headerlink" title="调试程序"></a>调试程序</h2><h3 id="断点调试"><a href="#断点调试" class="headerlink" title="断点调试"></a>断点调试</h3><table><thead><tr><th>功能</th><th>快捷键</th></tr></thead><tbody><tr><td>添加/取消断点</td><td>Ctrl + F8</td></tr><tr><td>调试当前类</td><td>Shift + F9</td></tr><tr><td>运行</td><td>Shift + F10</td></tr><tr><td>单步运行</td><td>F8</td></tr><tr><td>步入代码里面</td><td>F7</td></tr><tr><td>强制进入代码</td><td>Alt + Shift + F7</td></tr><tr><td>跳到下一个断点</td><td>F9</td></tr><tr><td>运行到光标出</td><td>Alt + F9</td></tr><tr><td>debug时查看选中值</td><td>Alt + F8</td></tr><tr><td>正常运行Java类</td><td>Ctrl + Shift + F10</td></tr><tr><td>debug运行Java类</td><td>Ctrl + Shift + F9</td></tr></tbody></table>]]></content>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>婉婷，Welcome</title>
      <link href="/2018/08/20/%E5%A9%89%E5%A9%B7%EF%BC%8CWelcome/"/>
      <url>/2018/08/20/%E5%A9%89%E5%A9%B7%EF%BC%8CWelcome/</url>
      <content type="html"><![CDATA[<p><strong>婉婷，你是我的第一个访客，欢迎你</strong>！</p><a id="more"></a><p>从昨儿下午忙活到现在，我的博客上线了，还没想好写些什么，网站也还有很多问题，但算是架子搭起来了，晚安，好梦！</p>]]></content>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git常用指令</title>
      <link href="/2018/08/19/Git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
      <url>/2018/08/19/Git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h1 id="Git常用指令（20180819初始版本）"><a href="#Git常用指令（20180819初始版本）" class="headerlink" title="Git常用指令（20180819初始版本）"></a>Git常用指令（20180819初始版本）</h1>]]></content>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>

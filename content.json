{"meta":{"title":"DengWeiQiang'Blog","subtitle":null,"description":"彬彬有礼，有情有义；人生在世，要有志气。","author":"邓伟强","url":"https://dengwq.top"},"pages":[{"title":"标签","date":"2018-08-19T14:42:26.000Z","updated":"2020-03-31T03:53:53.204Z","comments":true,"path":"tags/index.html","permalink":"https://dengwq.top/tags/index.html","excerpt":"","text":""},{"title":"关于我","date":"2018-08-19T14:42:50.000Z","updated":"2020-03-31T05:46:48.795Z","comments":true,"path":"about/index.html","permalink":"https://dengwq.top/about/index.html","excerpt":"","text":"自我介绍来自湖南永州，18年和一群朋友来到魔都闯荡，日子不闲不淡，一个人时间倒是充裕！ 联系我QQ：1483184267E-mail：dengweiqiang66@163.com"}],"posts":[{"title":"几本小说","slug":"几本小说","date":"2018-10-30T15:50:32.000Z","updated":"2020-03-31T03:53:53.203Z","comments":true,"path":"2018/10/30/几本小说/","link":"","permalink":"https://dengwq.top/2018/10/30/几本小说/","excerpt":"最近利用工作闲时的时间看了几本小说，这些都是久经时间考验的书籍！","text":"最近利用工作闲时的时间看了几本小说，这些都是久经时间考验的书籍！ 《1984》 战争就是和平，自由就是奴役，无知就是力量。 控制过去就能控制未来，控制现在就能控制过去。 世界有真理也有缪误，如果你坚持真理，即使你的对手是全世界，你也不是疯子。 寡头统治的精髓不是父子继承，二十死去的一代将某种世界观和生活方式施加给或者的一代，使之延续下去。 没有一种感情是纯粹的，因为一切都夹杂着恐惧和仇恨。他们的拥抱是一场战斗，高潮是一次胜利。这是给党的沉重的一击。这是一次政治行为。 1984虽已早过去，但是这本书里的景象，依然值得人们警醒。 《了不起的盖茨比》 她认为我懂很多，因为我懂的和她懂的不一样。 咱们大家都应当学会在朋友活着的时候讲交情，而不要等到他死了之后。 你说过一个开车不小心的人只有在碰上另一个开车不小心的人之前才安全吧？瞧，我碰上了另一个开车不小心的人了，是不是？ 在看同名电影的时候，时常想，盖茨比为什么了不起？了不起在哪里？ 在读完书之后，我觉得可以把罗曼罗兰的那句话用在盖茨比身上——世上只有一种真正英雄主义，那就是认识生活的真相后依然爱它。 从五年的等待到事故当晚在黛西窗外整整一夜的守候，以及到后来成为她的独独的牺牲品，尽管他的幻梦以死亡作为结局，但他却是按照幻梦指的方向一直走。 《基督山伯爵》 这世上无所谓幸福，也无所谓不幸，有的只是一种境况和另一种境况的比较如此而已。只有体验过极度不幸的人，才能品尝到极度的幸福。 有人说这本小说在一百多年前文学界的地位，就如同如今的网络小说，看完这本书之后，我对此毫不怀疑。 《白夜行》和《嫌疑人X的献身》 之所以放在一起是因为，我觉得这两本书完全一个套路，并无二致。 一个人对异性毫无保留的付出，人们打把这种事情叫做“爱”，因为爱，所以可以原谅！ 《小王子》 如果一个人爱上了一株花，而珠花只长在成千上万颗星星中的一颗上，那么观看星星就足以让这个人感到快乐。 只有心灵才能洞察一切，肉眼是看不到事物的本质的。 你要对你所有认熟过的事物永远负责，你要对你的那朵玫瑰花负责…… 这是给大人们的童话！ 应该没有人不喜欢狐狸吧，她是如此的勇敢！","categories":[],"tags":[{"name":"读书","slug":"读书","permalink":"https://dengwq.top/tags/读书/"}]},{"title":"送给自己的礼物","slug":"送给自己的礼物","date":"2018-10-30T15:21:13.000Z","updated":"2020-03-31T03:53:53.204Z","comments":true,"path":"2018/10/30/送给自己的礼物/","link":"","permalink":"https://dengwq.top/2018/10/30/送给自己的礼物/","excerpt":"","text":"20岁了，在这之后的岁月里只能自己独自砥砺前行了，在这前方的路上，肯定不缺少挫折，愿自己如这场夜间慢跑一样咬牙坚持下去！","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://dengwq.top/tags/随笔/"}]},{"title":"红雀大战游骑兵","slug":"红雀大战游骑兵","date":"2018-09-15T19:34:24.000Z","updated":"2020-03-31T03:53:53.204Z","comments":true,"path":"2018/09/16/红雀大战游骑兵/","link":"","permalink":"https://dengwq.top/2018/09/16/红雀大战游骑兵/","excerpt":"常说不到最后一刻，你永远不知道结果是什么！2011年MLB季后赛总决赛“红雀对游骑兵”第六场，无疑是对这句话的最好诠释了。","text":"常说不到最后一刻，你永远不知道结果是什么！2011年MLB季后赛总决赛“红雀对游骑兵”第六场，无疑是对这句话的最好诠释了。 点球成金昨天晚上看了布拉德皮特的电影《点球成金》，让我对棒球提起了兴趣。首先是了解棒球的规则，常用术语，以及棒球赛。 根据哔哩哔哩UP主的推荐看了这场《红雀大战游骑兵》的第六场，其实2011赛季《红雀大战游骑兵》7场都相当精彩，但是这一场根据喜剧性，对于我这个入门小生而言看的也更加爽。 红雀五次落后五次追平，两次被打到赛点，两次两次加时赛，长达四个小时的赛事，让人就如看了一场富有传奇色彩的电影。","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://dengwq.top/tags/随笔/"}]},{"title":"东京爱情故事","slug":"东京爱情故事","date":"2018-09-10T13:48:19.000Z","updated":"2020-03-31T03:53:53.203Z","comments":true,"path":"2018/09/10/东京爱情故事/","link":"","permalink":"https://dengwq.top/2018/09/10/东京爱情故事/","excerpt":"正是因为不知道明天会发生什么事，才会充满希望不是吗？ – 赤名莉香","text":"正是因为不知道明天会发生什么事，才会充满希望不是吗？ – 赤名莉香 初见之前就从各种渠道听人推荐这部电视剧，豆瓣评分也保持着傲人的9.4分，但网上资源很少，各种百度云的链接大多早已失效，日剧的资源不知道为什么被查禁的很厉害。最近终于找到了这部电视剧的资源，所以连着三天就刷完了，不是我想看这么快，而是被剧情所吸引。 找到的资源说是720P的，可是年代久远，画面依然有些模糊不清。看多了现在电视电影的男女主角，不禁觉得30年前的靓男婧女们真是朴素到家了，好在这部久经时间考验的“青春偶像剧”不是光靠脸吃饭的。 最好的开始，最好的结局有时候再努力又如何，那扇门是不会仅仅因为你的努力而打开的，剧情里埋了很多莉香和完治最终会分手的伏笔，但最重要的原因恐怕就是，那份爱来的太容易了吧。 三上和长崎的结局，恐怕是最具童话气息的了。你来我往，一来二去，不知不觉就真的爱上了；三上像《毕业生》里的本恩那样，想带她从婚礼上离开;长崎也勇敢的放下所有，回来寻找三上， 加上之前人物的铺垫，让人不禁会相信他们会永远幸福。 完治和里美最终走到一起，恐怕是最好的结局了，就如《一一》里面南骏那样，他和阿瑞的那份爱只要放在心底，才是最美好的。 高中时代的好朋友，都有点喜欢对方，外加五年的等候，中间的艰难抉择，终于修成正果，这不管在哪里都是大圆满的结局了。奈何半路遇到个赤名莉香，莉香那对生活的态度，那份真挚的笑容，以及在爱情中的勇敢付出，都令我们心生向往，更深层的原因可能是深埋我们心底里那份信念——有付出，应该有回报！莉香应该拥有这份感情。 所以对于里美算不上讨厌，但是对是莉香慢慢的总是慢慢的可惜，就算我知道，结局就是这样，这也是最好的结局，但还是有些失落，感谢网络上的UP主们，让我在这部电视诞生30年后依然能欣赏它，谢谢 PS：但是日本的吃瓜群众在现实中向里美扔石头这种事情还是看不过去的；可要是在东京的街头碰见莉香请代我向她问好 莉香那份真挚的笑容已经刻在了我的心里，相信短时间不会被抹去，不知道何时再看《东爱》，但希望是和那个她一起看。","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://dengwq.top/tags/随笔/"}]},{"title":"我曾七次鄙视自己的灵魂","slug":"我曾七次鄙视自己的灵魂","date":"2018-08-21T16:41:17.000Z","updated":"2020-03-31T03:53:53.204Z","comments":true,"path":"2018/08/22/我曾七次鄙视自己的灵魂/","link":"","permalink":"https://dengwq.top/2018/08/22/我曾七次鄙视自己的灵魂/","excerpt":"良多一直想成为自己理想中的那个人，但理想很丰满，现实很骨感，最终他变成了他最讨厌的那种人！良多：“你以为可以很容易成为想象中的人，那就大错特错了！”","text":"良多一直想成为自己理想中的那个人，但理想很丰满，现实很骨感，最终他变成了他最讨厌的那种人！良多：“你以为可以很容易成为想象中的人，那就大错特错了！” 《我曾七次鄙视自己的灵魂》 第一次，当他本可进取时，却故作谦卑； 第二次，当它空虚时，用爱欲来填充； 第三次，在困难和容易之间，它选择了容易； 第四次，它犯了错，却借由别人也会犯错来宽慰自己； 第五次，它自由软弱，却把它认为是生命的坚韧； 第六次，当它鄙夷一张丑恶的嘴脸时，却不知那正是自己面具中的一副； 第七次，它侧身于生活的污泥中虽不甘心，却又畏首畏尾。","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://dengwq.top/tags/随笔/"}]},{"title":"23种设计模式解析","slug":"23种设计模式解析","date":"2018-08-21T16:35:52.000Z","updated":"2020-03-31T03:53:53.203Z","comments":true,"path":"2018/08/22/23种设计模式解析/","link":"","permalink":"https://dengwq.top/2018/08/22/23种设计模式解析/","excerpt":"设计模式(Design Pattern)是一套被反复使用、多数人知晓的、经过分类的、代码设计经验的总结。 使用设计模式的目的：为了代码可重用性、让代码更容易被他人理解、保证代码可靠性。设计模式使代码编写真正工程化；设计模式是软件工程的基石脉络，如同大厦的结构一样。","text":"设计模式(Design Pattern)是一套被反复使用、多数人知晓的、经过分类的、代码设计经验的总结。 使用设计模式的目的：为了代码可重用性、让代码更容易被他人理解、保证代码可靠性。设计模式使代码编写真正工程化；设计模式是软件工程的基石脉络，如同大厦的结构一样。 设计模式的分类总体来说设计模式分为三大类： 创建型模式，共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。 结构型模式，共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。 行为型模式，共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。 其实还有两类：并发型模式和线程模式。用一个图片来整体描述一下： 设计模式的六大原则总原则：开闭原则(Open Close Principle)开闭原则就是说对扩展开放，对修改关闭。在程序需要进行拓展的时候，不能去修改原有的代码，而是要扩展原有代码，实现一个热插拔的效果。所以一句话概括就是：为了使程序的扩展性号，易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类等，后面具体设计中我们会提到这点。","categories":[],"tags":[{"name":"java","slug":"java","permalink":"https://dengwq.top/tags/java/"}]},{"title":"idea的使用技巧","slug":"idea的使用技巧","date":"2018-08-20T15:31:01.000Z","updated":"2020-03-31T03:53:53.203Z","comments":true,"path":"2018/08/20/idea的使用技巧/","link":"","permalink":"https://dengwq.top/2018/08/20/idea的使用技巧/","excerpt":"idea在Java领域的强大编辑能力是毋庸置疑的，这是我近期学习idea的一些总结！","text":"idea在Java领域的强大编辑能力是毋庸置疑的，这是我近期学习idea的一些总结！ 高效定位代码无处不在的跳转项目间的跳转 功能 快捷键 跳转到下一个项目窗口 Ctrl + Atl + ] 返回到上一个项目窗口 Ctrl + Atl + [ 文件间的跳转 功能 快捷键 最近的文件 Ctrl + E 最近编辑的文件 Ctrl + Shift + E 浏览修改位置的跳转 功能 快捷键 最后一个修改位置 Ctrl + Shift + backspace 上一个浏览位置 Ctrl + Alt + 左箭头 下一个浏览位置 Ctrl + Alt + 右箭头 利用书签跳转 功能 快捷键 添加书签 F11 添加带有标记的书签 Ctrl + F11 添加带有标记的书签 Ctrl + Shift + 数字或字母 跳转到带有标记的书签 Ctrl + 书签编号（见上一条） 书签总览 Shift + F11 字符串跳转之插件emacsIdea首先到idear商店安装emacsIdea插件，设置emacsIDEAS插件的快捷键：打开搜索功能，输入keymap，右边搜索框输入acejumpword，新增一个快捷键。 功能 快捷键 跳转需要查找的字符位置 Alt + J + 需要查找的字母 导航窗口的跳转 功能 快捷键 快速寻找功能快捷键 Ctrl + Shift + A 编辑区和文件区来回跳转 Alt + 1 &amp; Esc 精准搜索快捷键按两次可以全局搜索 功能 快捷键 查找类 Ctrl + N 查找文件 Ctrl + Shift + N 查找符号 Chrl + Alt + Shift + N 查找字符串 Ctrl + Shift + F 代码小助手列操作示例：使用建表语句快速创建枚举类 选中单词 ==Ctrl + &gt;== 英文大小写切换 ==Ctrl + Shift + U== 对所有选中单词进行操作 ==Ctrl + Alt + Shift +J== live template示例： main方法模板 位置：菜单 –&gt; File –&gt; Setting –&gt; Editor –&gt; Live Templates 功能：定义模板，使用特定 “字符串” 快速敲击出某段代码 举例： psvm 敲出 public static void main(String[] args){ … } postfix示例：100.for 位置： 菜单 –&gt; File –&gt; Setting –&gt; Editor –&gt; General –&gt; Postfix Completion 功能： 使用后缀，快速敲出代码块 举例： 100.fori 敲出 for(int i=0; i&lt;100; i++) {…} alter + enter 自动创建函数 自动生成参数化 String.format 实现接口 单词拼写，单词建议 导包 编译高质量代码重构 重构变量： Shift + F6 重构方法： Ctrl + F6 抽取 抽取变量：Ctrl + Alt + V 抽取静态变量： Ctrl + Alt + C 抽取成员变量： Ctrl + Alt + F 抽取方法参数： Ctrl + Alt + P 抽取函数: Ctrl + Alt + M 关联一切Spring的关联示例： 导入Spring的引用，通过bean查找实现类 位置： 菜单 –&gt; File –&gt; Project Structure –&gt; Facets 功能： 帮助管理Spring容器。还提供了很多其他的管理，比如EJB 使用： 点击 + 号，选择Spring，选择模块 在Spring中，点击 + 号，起一个名字，选择Spring配置文件。(SpringBoot中，选择类文件) 项目的各个文件中会出现Spring的Logo，其提供了很多功能。比如：查看该Bean是在哪里提供的。 与数据库的关联关联了数据库之后，如果需要重构字段或表名，不仅可以更改当前页面，还可以更改所有引用到该表的SQL以及数据库表名或字段。 调试程序断点调试 功能 快捷键 添加/取消断点 Ctrl + F8 调试当前类 Shift + F9 运行 Shift + F10 单步运行 F8 步入代码里面 F7 强制进入代码 Alt + Shift + F7 跳到下一个断点 F9 运行到光标出 Alt + F9 debug时查看选中值 Alt + F8 正常运行Java类 Ctrl + Shift + F10 debug运行Java类 Ctrl + Shift + F9","categories":[],"tags":[{"name":"工具","slug":"工具","permalink":"https://dengwq.top/tags/工具/"}]},{"title":"婉婷，Welcome","slug":"婉婷，Welcome","date":"2018-08-19T18:10:45.000Z","updated":"2020-03-31T03:53:53.203Z","comments":true,"path":"2018/08/20/婉婷，Welcome/","link":"","permalink":"https://dengwq.top/2018/08/20/婉婷，Welcome/","excerpt":"婉婷，你是我的第一个访客，欢迎你！","text":"婉婷，你是我的第一个访客，欢迎你！ 从昨儿下午忙活到现在，我的博客上线了，还没想好写些什么，网站也还有很多问题，但算是架子搭起来了，晚安，好梦！","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://dengwq.top/tags/随笔/"}]},{"title":"Git常用指令","slug":"Git常用指令","date":"2018-08-19T15:33:32.000Z","updated":"2020-03-31T03:53:53.203Z","comments":true,"path":"2018/08/19/Git常用指令/","link":"","permalink":"https://dengwq.top/2018/08/19/Git常用指令/","excerpt":"","text":"Git常用指令（20180819初始版本）","categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://dengwq.top/tags/git/"}]}]}
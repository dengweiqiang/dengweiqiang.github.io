{"meta":{"title":"DengWeiQiang'Blog","subtitle":null,"description":"彬彬有礼，有情有义；人生在世，要有志气。","author":"邓伟强","url":"https://dengwq.top"},"pages":[{"title":"关于我","date":"2018-08-19T14:42:50.000Z","updated":"2020-03-31T05:46:48.795Z","comments":true,"path":"about/index.html","permalink":"https://dengwq.top/about/index.html","excerpt":"","text":"自我介绍来自湖南永州，18年和一群朋友来到魔都闯荡，日子不闲不淡，一个人时间倒是充裕！ 联系我QQ：1483184267E-mail：dengweiqiang66@163.com"},{"title":"标签","date":"2018-08-19T14:42:26.000Z","updated":"2020-03-31T07:57:15.311Z","comments":true,"path":"tags/index.html","permalink":"https://dengwq.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hexo常用命令小结","slug":"Hexo常用命令小结","date":"2020-04-14T13:08:37.000Z","updated":"2020-04-14T13:24:09.032Z","comments":true,"path":"2020/04/14/Hexo常用命令小结/","link":"","permalink":"https://dengwq.top/2020/04/14/Hexo常用命令小结/","excerpt":"最近开始重新使用Hexo写博客，但是有一些常用的命令又时常想不起来，所以写下这篇文章总结一下Hexo常用的命令。","text":"最近开始重新使用Hexo写博客，但是有一些常用的命令又时常想不起来，所以写下这篇文章总结一下Hexo常用的命令。 常用命令123456hexo n \"新的博客\" #新建博客hexo g &amp; hexo s #编译并运行hexo g &amp; hexo d #编译并部署------------------------------------git branch -a #查看所有分支git push --set-upstream origin hexo_bak #推送到指定分支 简写12345hexo n \"我的博客\" =&gt; hexo new \"我的博客\" #新建文章hexo p =&gt; hexo publishhexo g =&gt; hexo generate#生成hexo s =&gt; hexo server #启动服务预览hexo d =&gt; hexo deploy#部署 服务器12345678hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo clean #清除缓存 网页正常情况下可以忽略此条命令hexo g #生成静态网页hexo d #开始部署 设置文章摘要1以上是文章摘要 &lt;!--more--&gt; 以下是余下全文","categories":[],"tags":[{"name":"工具","slug":"工具","permalink":"https://dengwq.top/tags/工具/"}]},{"title":"Git推送项目到GitHub","slug":"Git推送项目到GitHub","date":"2020-04-14T13:03:29.000Z","updated":"2020-04-14T13:07:28.775Z","comments":true,"path":"2020/04/14/Git推送项目到GitHub/","link":"","permalink":"https://dengwq.top/2020/04/14/Git推送项目到GitHub/","excerpt":"使用Git推送项目到Github，这个功能非常常用，所以记录下来。","text":"使用Git推送项目到Github，这个功能非常常用，所以记录下来。 …or create a new repository on the command line从本地仓库推项目到远程仓库 123456echo &quot;# springboot_crud&quot; &gt;&gt; README.mdgit init #初始化本地仓库git add . #添加全部已经修改git commit -m &quot;first commit&quot; #提交说明，将修改文件提到本地仓库git remote add origin https://github.com/dengweiqiang/springboot_crud.git #连接到远程仓库git push -u origin master #将本地代码强制推送到origin仓库中的master分支 …or push an existing repository from the command line从命令行推送现有的库 12git remote add origin https://github.com/dengweiqiang/springboot_crud.gitgit push -u origin master","categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"https://dengwq.top/tags/学习/"}]},{"title":"SpringBoot项目CRUD实践","slug":"SpringBoot项目CRUD实践","date":"2020-04-14T12:57:50.000Z","updated":"2020-04-14T13:02:11.648Z","comments":true,"path":"2020/04/14/SpringBoot项目CRUD实践/","link":"","permalink":"https://dengwq.top/2020/04/14/SpringBoot项目CRUD实践/","excerpt":"使用SpringBoot做的一个CRUD的手脚架，并且提供了数据库密码的加密功能。","text":"使用SpringBoot做的一个CRUD的手脚架，并且提供了数据库密码的加密功能。 项目准备 进入“https://start.spring.io/”构建SpringBoot项目； 选择“Web”、“MySQL”、“Mybatis”模块； 导入项目到idea； 配置数据库 新建数据库； 12create database test;use test; 新建表 1234567891011-- create table `account`DROP TABLE `account`;CREATE TABLE `account` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(20) NOT NULL, `money` double DEFAULT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;INSERT INTO `account` VALUES ('1', 'aaa', '1000');INSERT INTO `account` VALUES ('2', 'bbb', '1000');INSERT INTO `account` VALUES ('3', 'ccc', '1000'); 配置数据库连接application.properties文件 1234567891011spring.datasource.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC# ENC() 是数据库加密函数spring.datasource.username=ENC(YMoG7LZvcKq3DbW3dc9Ltg==)spring.datasource.password=ENC(RgqVyviuib6ScIcgcQr9SA==)spring.datasource.driver-class-name=com.mysql.jdbc.Driver# jasypt加密的盐值jasypt.encryptor.password=erp# 开启debugdebug=true# 控制台打印SQLlogging.level.top.dengwq.springboot_crud.mapper=debug Entity12345678@Data@ToString@EqualsAndHashCodepublic class Account &#123; private int id ; private String name ; private double money;&#125; Mapper1234567891011121314151617@Mapperpublic interface AccountMapper &#123; @Insert(\"insert into account(name, money) values(#&#123;name&#125;, #&#123;money&#125;)\") int add(@Param(\"name\") String name, @Param(\"money\") double money); @Update(\"update account set name = #&#123;name&#125;, money = #&#123;money&#125; where id = #&#123;id&#125;\") int update(@Param(\"name\") String name, @Param(\"money\") double money, @Param(\"id\") int id); @Delete(\"delete from account where id = #&#123;id&#125;\") int delete(int id); @Select(\"select id, name as name, money as money from account where id = #&#123;id&#125;\") Account findAccount(@Param(\"id\") int id); @Select(\"select id, name as name, money as money from account\") List&lt;Account&gt; findAccountList();&#125; Service123456789101112131415161718192021@Servicepublic class AccountService &#123; @Autowired private AccountMapper accountMapper; public int add(String name, double money) &#123; return accountMapper.add(name, money); &#125; public int update(String name, double money, int id) &#123; return accountMapper.update(name, money, id); &#125; public int delete(int id) &#123; return accountMapper.delete(id); &#125; public Account findAccount(int id) &#123; return accountMapper.findAccount(id); &#125; public List&lt;Account&gt; findAccountList() &#123; return accountMapper.findAccountList(); &#125;&#125; Controller12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152@RestController@RequestMapping(\"/account\")public class AccountController &#123; @Autowired AccountService accountService; @RequestMapping(value = \"/list\", method = RequestMethod.GET) public List&lt;Account&gt; getAccounts() &#123; return accountService.findAccountList(); &#125; @RequestMapping(value = \"/&#123;id&#125;\", method = RequestMethod.GET) public Account getAccountById(@PathVariable(\"id\") int id) &#123; return accountService.findAccount(id); &#125; @RequestMapping(value = \"/&#123;id&#125;\", method = RequestMethod.PUT) public String updateAccount(@PathVariable(\"id\") int id, @RequestParam(value = \"name\", required = true) String name, @RequestParam(value = \"money\", required = true) double money) &#123; int t= accountService.update(name,money,id); if(t==1) &#123; return \"success\"; &#125;else &#123; return \"fail\"; &#125; &#125; @RequestMapping(value = \"/&#123;id&#125;\", method = RequestMethod.DELETE) public String delete(@PathVariable(value = \"id\")int id) &#123; int t= accountService.delete(id); if(t==1) &#123; return \"success\"; &#125;else &#123; return \"fail\"; &#125; &#125; @RequestMapping(value = \"\", method = RequestMethod.POST) public String postAccount(@RequestParam(value = \"name\") String name, @RequestParam(value = \"money\") double money) &#123; int t= accountService.add(name,money); if(t==1) &#123; return \"success\"; &#125;else &#123; return \"fail\"; &#125; &#125;&#125; 加密组件 依赖 12345&lt;dependency&gt; &lt;groupId&gt;com.github.ulisesbocchio&lt;/groupId&gt; &lt;artifactId&gt;jasypt-spring-boot-starter&lt;/artifactId&gt; &lt;version&gt;2.1.1&lt;/version&gt;&lt;/dependency&gt; 明文加密 123456789101112/*** ulisesbocchio 加密组件*/@Testpublic void getPass() &#123; String name = encryptor.encrypt(\"root\"); String password = encryptor.encrypt(\"123456\"); System.out.println(\"Name加密后明文: \" + name); System.out.println(\"Password加密后明文: \" + password); Assert.assertTrue(name.length() &gt; 0); Assert.assertTrue(password.length() &gt; 0);&#125; 使用（application.properties） 123# ENC() 是数据库加密函数spring.datasource.username=ENC(YMoG7LZvcKq3DbW3dc9Ltg==)spring.datasource.password=ENC(RgqVyviuib6ScIcgcQr9SA==)","categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"https://dengwq.top/tags/学习/"}]},{"title":"《黑镜》","slug":"《黑镜》","date":"2020-03-31T07:15:38.000Z","updated":"2020-03-31T07:57:24.247Z","comments":true,"path":"2020/03/31/《黑镜》/","link":"","permalink":"https://dengwq.top/2020/03/31/《黑镜》/","excerpt":"这部剧吸引我的地方就是每一集都会引发你对剧中问题的思考，为什么他会这么做，这样对不对，现实中存在这种情况么，假如真的发生了这样的事情该怎么办。","text":"这部剧吸引我的地方就是每一集都会引发你对剧中问题的思考，为什么他会这么做，这样对不对，现实中存在这种情况么，假如真的发生了这样的事情该怎么办。 第一季ep01这场艺术最后成功了么，如果他是想改变什么，应该说它失败了，如果他是想证明什么，那么他确实成功了。 一根断指的出现，使得民意发生了180度的转弯，民意真的正确么，真的应该完全跟随民意么。 为一个疯子套上艺术家的身份后，似乎一切都可以解释为行为艺术了，他死亡，是这件事情更为讽刺。（艺术的边界是什么） 对媒体的讽刺也极具讽刺，媒体为了报道可以不惜一切代价。 ep02下等的清洁工，中等的蹬单车，上等的做评委，上一等级的不把下一等级的当人看，下一等级的维护者上等人的生活，这就是一个物化了的真实社会。 个人的有意识行为，会被群体的无意识行为所代替。 评委时催眠师，观众是傀儡，它们的大脑是瘫痪的，都被催眠指引向了同一方向。 无论是喝了迷药的，还是没有喝迷药的，他们最终的结果都是一样的。（讽刺，对英雄更加尊敬了） 我们都成了我们最讨厌的样子。他曾那么想改变这个世界，确终于被这个世界所改变。 不忘初心，方得始终，你我共勉。 ep03当记忆不再是记忆，而是记录时，失忆成了一种解脱，遗忘成了一种自我保护。 只因记忆时生存的证明。（记忆粒广告语） 当一个人拥有着和我一样的记忆，那么这个人是我么？或者说，如果记忆可以复制，那么人是不是永生了呢？（思考） 找回记忆不难，那找回自我呢？ 第二季ep01画画都用电子的了么，而且画板和真的一样。 他死了，对他最大的尊重，就是让他死了吧，而不是找个人或东西来代替他。 你不说我也不说。（听起来好恐怖） 你好脆弱啊。（产生了同情，只有平等时，才会有这种情感，她已经迷失了，逐渐分不清这是人还是机器了） 我们有无数可机会可以在它弱小是摧毁它，可是我们却什么也没有做，任由欲望控制着我们。 有些东西是机器很难学会的，比如自主意识，要不要这样做，考虑要不要这样做的标准很多时候是感觉，而不是利害关系，更主要的是人与人之间的平等，很明显这个机器人不具备这一点，或者设计者不想让它具备这一点。 从某种意义上来说，是不是她把自己困在了里面，走不出来了，但可以感觉到她和她的女儿明白了某种界限。 ep02为什么都在窗口？ 女主不记得自己是谁了，小女孩拿着相机拍照。 人人都拿着相机，却无人拯救她，这是讽刺全民自媒体时代么。 围观是不是更恐怖呢？ 看着剧场围观的人，与女主有什么不一样呢，好人与坏人总要有点不一样吧。 ep03看这个儿童教育节目，也不怎么样么。 可怕的不是有政治立场的人，而是无政治立场虚拟人物，因为它什么也不会，也不能改变。 圣诞特别篇人们想要被关注，他们不想被排斥，不想让自己没有存在感。 就像当你准备跳进游泳池的时候，你会担心，水是不是太凉了，但你明白，等你跳下去之后一切都会没事，让你退缩不前的是对于刺激的恐惧。 人，总得找些什么事情做，总得去寻找“意义”，他无法忍受独自一人关禁闭般的生活，那样会使他彻底崩溃，陷入虚无。唯有通过日复一日的劳作，我们才能把自己的生活填满。 感觉被所有人屏蔽应该是最严酷的惩罚了。 第三季ep01给人打分，给所有人打分，所有人给对方打分，每个人都能看到你的分数，这是要干啥。 这是生活在真实世界中的，而不是生活在社交中，物化的对人类社会互联网的讽刺么。 人生不应该评分，每个人都是独一无二的，能给自己评分的只能是你自己。","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://dengwq.top/tags/随笔/"}]},{"title":"《俗女养成记》","slug":"《俗女养成记》","date":"2020-03-31T07:15:23.000Z","updated":"2020-03-31T07:31:35.260Z","comments":true,"path":"2020/03/31/《俗女养成记》/","link":"","permalink":"https://dengwq.top/2020/03/31/《俗女养成记》/","excerpt":"19年真是台剧的丰收年，上半年《我们与恶的距离》，下半年《想见你》，现在再加上这部剧。很难想象一个女人到了四十岁依然能够这么勇敢，看到后面才一点一点理解她的决定，正是童年时爷爷奶奶，父母的悉心呵护才有如今勇敢的陈嘉玲。 我不是好人，也不是坏人，我只是需要一个爱我的人，好命跟歹命，春夏跟秋冬，跟他一人一半。","text":"19年真是台剧的丰收年，上半年《我们与恶的距离》，下半年《想见你》，现在再加上这部剧。很难想象一个女人到了四十岁依然能够这么勇敢，看到后面才一点一点理解她的决定，正是童年时爷爷奶奶，父母的悉心呵护才有如今勇敢的陈嘉玲。 我不是好人，也不是坏人，我只是需要一个爱我的人，好命跟歹命，春夏跟秋冬，跟他一人一半。 ep01有些时候，小孩子的求生意志是很惊人的。 我从来不曾想过，一个三十岁的女人不想结婚，竟然会掀起如此打的风暴，那力道之大，让我的二姑姑终生未嫁。 ep02大表姐每次来，妈妈都要我穿新衣，她自己也是。长大后，我才明白，竞争是女人一出生就会的功夫。 真的有必要什么都要比么，为什么要比呢。 自己人终究还是自己人，客人是客人，是不一样的。 ep03在那个时候我仿佛看到了我恐怖的后半生。（婆婆恐惧症） 干嘛这样，我们也是好意啊。（嘉玲似乎明白了什么） 谈恋爱的时候，你听歌的时候，歌都会变得很好听，树木，花朵，不管什么东西都会变得很漂亮。（这种形容很有意思） 世界上最远的距离，不是我不能说我爱你 而是想你痛彻心脾，却只能深埋心底 世界上最远的距离，不是我不能说我想你 而是彼此相爱，却不能够在一起 世界上最远的距离，不是彼此相爱却不能够在一起 而实明知道真爱无敌，却装作毫不在意 —- 片中阿娟写给阿诚的信 也许这件事情对于孩子的伤害是终生的，不仅影响了当事人，对于旁观者也是一种伤害。 父母对孩子不仅要有相对科学的性教育，应该还要要正确的爱教育。 ep04不必让孩子最好，不要让他最不一样是父母的责任。 你会发现，大人老是不愿意听小孩子的意见，以为他们什么都不懂，受苦的其实还是小孩子自己，知道错误后也不愿意公开承认错误，自己死要面子让家人活受罪。（小嘉玲咸鱼事件） 奶奶说，你要自己会想，妈妈说，你要自己会判断。 想起了孙杨听证会事件，想起了巨婴症，已经是两个孩子的爸爸了，对于从未学过医的母亲的话不敢反驳，我们的教育是不是出了什么问题。（帝爷公药方事件） 为什么遇到事情总是推卸自己的责任的，我也是如此么，我不要这个样子。 做一个聪明的孩子，也是有方法的，有的时候，你要找一个地方，毁尸灭迹；有的时候，你要算好时机，瞒天过海；更有的时候，你要心狠一点，辜负爸爸的爱。不听话会被人揍，听话也不一定有好下场。听话还是不听话，生存还是毁灭，这是个重大的问题。 ep05可能这就是成熟女性吧，勇于拒绝，多了许多魅力。 大人的一个玩笑，却被孩子深信不疑。 说话要抓重点，不要想说什么说什么，没人听得懂的，徒增笑料。 今天的风湿湿的 今天的天暗暗的 今天的我需要一个人 来陪我风吹雨淋 人生就像一场梦 你是我最美的梦 你是台风天 冒烟的泡面 你是我最爱的人 若是有你和我做伴 有钱贫穷我都没差 拿着雨伞等待雨散 我要牵你的手 牵到手红红 – 旺福的《等待雨散》 ep06悲伤五阶段：否认、愤怒、协商（讨价还价）、忧郁（抑郁）、接受。 ep07 这个年纪要奶奶替我安排相亲 妈妈帮我找工作 爸爸怕我…没钱 我是没用的人，让你们失望了 你知道你女儿很有天分吗？应该比我更有天分。（情商啊） ep08 生命会找到自己的出路。 ——《侏罗纪公园》 到底是命运决定了我们的方向，还是我们自己决定了命运。 ep09走到人生这个阶段，不再见不一定是坏事，有时候清清楚楚，轻轻放下或许更好。 ep10你觉得快乐是什么？你想过十年后的自己是什么样么？ 成熟男女就是干脆啊。 亲爱的陈嘉玲 你是从几时开始忘记了，忘记了这辈子其实很长，长到你可以跌倒再站起来，做梦有醒过来； 你又是从即使开始忘记了，这辈子其实很短，短到你没时间再去勉强自己，没时间再去讨厌你自己； 亲爱的陈嘉玲 从现在开始，从这里开始，不要再忘记了，我想要对你说：对不起，谢谢你，还有..我爱你。","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://dengwq.top/tags/随笔/"}]},{"title":"《想见你》","slug":"《想见你》","date":"2020-03-31T07:07:25.000Z","updated":"2020-03-31T07:11:41.349Z","comments":true,"path":"2020/03/31/《想见你》/","link":"","permalink":"https://dengwq.top/2020/03/31/《想见你》/","excerpt":"《想见你》里面的几个主题：面对失去，面对成长，面对爱情，面对自我，面对世界 莫俊杰，陈思源在面对困境时，都有人伸出援手，拯救了它们；假如有人在陈韶如，王诠胜他们遇到困境时伸出援手，是不是能够避免后面这些事情的发生呢。","text":"《想见你》里面的几个主题：面对失去，面对成长，面对爱情，面对自我，面对世界 莫俊杰，陈思源在面对困境时，都有人伸出援手，拯救了它们；假如有人在陈韶如，王诠胜他们遇到困境时伸出援手，是不是能够避免后面这些事情的发生呢。 第六集莫俊杰看到黄雨萱对那幅画的表情后，肯定明白了，她已经不是他心中喜欢的那个女孩了 你喜欢的人，一定是你见过，听过的，看过的，某些品质或人 大哥哥我叫黄雨萱，你不可以忘记我哦（瓦特，这编剧脑洞大开啊） 第七集女主的眼泪说流就流，演技可以 第八集一直都是李子维和黄雨萱，没其他两个人啥事情 第十集它们真的能够改变过去么，又会以什么方式来改变呢，还是一切回零，继续循环 她等了两年已经如此难熬，他等了十五年，思考这一切，最后决定什么也不要改变，该发生的就让他发生 我们在一起总是能互相体谅，总是能牵着手，朝同一个方向前进。但不管距离多远，我们的心都是在一起的 – Only if you asked to see me– Our meeting would be meaningful to me只有你想见我的时候，我们的相遇才有意义 第十一集两次离别，为何求死呢 原来哪些日记都是意有所指啊，做自己就好，不比学他人，邯郸学步，不如不学 这一切都是梦，我幻想一个我喜欢的人，刚好也喜欢我的梦 第十二集我跟你们一样，我也不喜欢以前的自己。（泪目，可能这就是梦醒来的后遗症吧） 想到了变形记，那些主人公，回到了原来的环境，会对他的未来产生什么影响 第十三集这就对了，历史根本不应该被改变 你想从这个世界消失，不是你对这个世界太失望，而是你对世界有太多的期望 被一个人放在心上，从来都不是理所当然的事情，不管那个人是谁，是家人，还是朋友，都是非常难得，应该被好好珍惜才对 最后这个场景，应该叫萝莉是怎样养成的 最后才知道，李子维的摩托为什么是那样的，原来是为了小黄雨萱啊","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://dengwq.top/tags/随笔/"}]},{"title":"几本小说","slug":"几本小说","date":"2018-10-30T15:50:32.000Z","updated":"2020-03-31T03:53:53.203Z","comments":true,"path":"2018/10/30/几本小说/","link":"","permalink":"https://dengwq.top/2018/10/30/几本小说/","excerpt":"最近利用工作闲时的时间看了几本小说，这些都是久经时间考验的书籍！","text":"最近利用工作闲时的时间看了几本小说，这些都是久经时间考验的书籍！ 《1984》 战争就是和平，自由就是奴役，无知就是力量。 控制过去就能控制未来，控制现在就能控制过去。 世界有真理也有缪误，如果你坚持真理，即使你的对手是全世界，你也不是疯子。 寡头统治的精髓不是父子继承，二十死去的一代将某种世界观和生活方式施加给或者的一代，使之延续下去。 没有一种感情是纯粹的，因为一切都夹杂着恐惧和仇恨。他们的拥抱是一场战斗，高潮是一次胜利。这是给党的沉重的一击。这是一次政治行为。 1984虽已早过去，但是这本书里的景象，依然值得人们警醒。 《了不起的盖茨比》 她认为我懂很多，因为我懂的和她懂的不一样。 咱们大家都应当学会在朋友活着的时候讲交情，而不要等到他死了之后。 你说过一个开车不小心的人只有在碰上另一个开车不小心的人之前才安全吧？瞧，我碰上了另一个开车不小心的人了，是不是？ 在看同名电影的时候，时常想，盖茨比为什么了不起？了不起在哪里？ 在读完书之后，我觉得可以把罗曼罗兰的那句话用在盖茨比身上——世上只有一种真正英雄主义，那就是认识生活的真相后依然爱它。 从五年的等待到事故当晚在黛西窗外整整一夜的守候，以及到后来成为她的独独的牺牲品，尽管他的幻梦以死亡作为结局，但他却是按照幻梦指的方向一直走。 《基督山伯爵》 这世上无所谓幸福，也无所谓不幸，有的只是一种境况和另一种境况的比较如此而已。只有体验过极度不幸的人，才能品尝到极度的幸福。 有人说这本小说在一百多年前文学界的地位，就如同如今的网络小说，看完这本书之后，我对此毫不怀疑。 《白夜行》和《嫌疑人X的献身》 之所以放在一起是因为，我觉得这两本书完全一个套路，并无二致。 一个人对异性毫无保留的付出，人们打把这种事情叫做“爱”，因为爱，所以可以原谅！ 《小王子》 如果一个人爱上了一株花，而珠花只长在成千上万颗星星中的一颗上，那么观看星星就足以让这个人感到快乐。 只有心灵才能洞察一切，肉眼是看不到事物的本质的。 你要对你所有认熟过的事物永远负责，你要对你的那朵玫瑰花负责…… 这是给大人们的童话！ 应该没有人不喜欢狐狸吧，她是如此的勇敢！","categories":[],"tags":[{"name":"读书","slug":"读书","permalink":"https://dengwq.top/tags/读书/"}]},{"title":"送给自己的礼物","slug":"送给自己的礼物","date":"2018-10-30T15:21:13.000Z","updated":"2020-03-31T03:53:53.204Z","comments":true,"path":"2018/10/30/送给自己的礼物/","link":"","permalink":"https://dengwq.top/2018/10/30/送给自己的礼物/","excerpt":"","text":"20岁了，在这之后的岁月里只能自己独自砥砺前行了，在这前方的路上，肯定不缺少挫折，愿自己如这场夜间慢跑一样咬牙坚持下去！","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://dengwq.top/tags/随笔/"}]},{"title":"红雀大战游骑兵","slug":"红雀大战游骑兵","date":"2018-09-15T19:34:24.000Z","updated":"2020-03-31T03:53:53.204Z","comments":true,"path":"2018/09/16/红雀大战游骑兵/","link":"","permalink":"https://dengwq.top/2018/09/16/红雀大战游骑兵/","excerpt":"常说不到最后一刻，你永远不知道结果是什么！2011年MLB季后赛总决赛“红雀对游骑兵”第六场，无疑是对这句话的最好诠释了。","text":"常说不到最后一刻，你永远不知道结果是什么！2011年MLB季后赛总决赛“红雀对游骑兵”第六场，无疑是对这句话的最好诠释了。 点球成金昨天晚上看了布拉德皮特的电影《点球成金》，让我对棒球提起了兴趣。首先是了解棒球的规则，常用术语，以及棒球赛。 根据哔哩哔哩UP主的推荐看了这场《红雀大战游骑兵》的第六场，其实2011赛季《红雀大战游骑兵》7场都相当精彩，但是这一场根据喜剧性，对于我这个入门小生而言看的也更加爽。 红雀五次落后五次追平，两次被打到赛点，两次两次加时赛，长达四个小时的赛事，让人就如看了一场富有传奇色彩的电影。","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://dengwq.top/tags/随笔/"}]},{"title":"东京爱情故事","slug":"东京爱情故事","date":"2018-09-10T13:48:19.000Z","updated":"2020-03-31T03:53:53.203Z","comments":true,"path":"2018/09/10/东京爱情故事/","link":"","permalink":"https://dengwq.top/2018/09/10/东京爱情故事/","excerpt":"正是因为不知道明天会发生什么事，才会充满希望不是吗？ – 赤名莉香","text":"正是因为不知道明天会发生什么事，才会充满希望不是吗？ – 赤名莉香 初见之前就从各种渠道听人推荐这部电视剧，豆瓣评分也保持着傲人的9.4分，但网上资源很少，各种百度云的链接大多早已失效，日剧的资源不知道为什么被查禁的很厉害。最近终于找到了这部电视剧的资源，所以连着三天就刷完了，不是我想看这么快，而是被剧情所吸引。 找到的资源说是720P的，可是年代久远，画面依然有些模糊不清。看多了现在电视电影的男女主角，不禁觉得30年前的靓男婧女们真是朴素到家了，好在这部久经时间考验的“青春偶像剧”不是光靠脸吃饭的。 最好的开始，最好的结局有时候再努力又如何，那扇门是不会仅仅因为你的努力而打开的，剧情里埋了很多莉香和完治最终会分手的伏笔，但最重要的原因恐怕就是，那份爱来的太容易了吧。 三上和长崎的结局，恐怕是最具童话气息的了。你来我往，一来二去，不知不觉就真的爱上了；三上像《毕业生》里的本恩那样，想带她从婚礼上离开;长崎也勇敢的放下所有，回来寻找三上， 加上之前人物的铺垫，让人不禁会相信他们会永远幸福。 完治和里美最终走到一起，恐怕是最好的结局了，就如《一一》里面南骏那样，他和阿瑞的那份爱只要放在心底，才是最美好的。 高中时代的好朋友，都有点喜欢对方，外加五年的等候，中间的艰难抉择，终于修成正果，这不管在哪里都是大圆满的结局了。奈何半路遇到个赤名莉香，莉香那对生活的态度，那份真挚的笑容，以及在爱情中的勇敢付出，都令我们心生向往，更深层的原因可能是深埋我们心底里那份信念——有付出，应该有回报！莉香应该拥有这份感情。 所以对于里美算不上讨厌，但是对是莉香慢慢的总是慢慢的可惜，就算我知道，结局就是这样，这也是最好的结局，但还是有些失落，感谢网络上的UP主们，让我在这部电视诞生30年后依然能欣赏它，谢谢 PS：但是日本的吃瓜群众在现实中向里美扔石头这种事情还是看不过去的；可要是在东京的街头碰见莉香请代我向她问好 莉香那份真挚的笑容已经刻在了我的心里，相信短时间不会被抹去，不知道何时再看《东爱》，但希望是和那个她一起看。","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://dengwq.top/tags/随笔/"}]},{"title":"我曾七次鄙视自己的灵魂","slug":"我曾七次鄙视自己的灵魂","date":"2018-08-21T16:41:17.000Z","updated":"2020-03-31T03:53:53.204Z","comments":true,"path":"2018/08/22/我曾七次鄙视自己的灵魂/","link":"","permalink":"https://dengwq.top/2018/08/22/我曾七次鄙视自己的灵魂/","excerpt":"良多一直想成为自己理想中的那个人，但理想很丰满，现实很骨感，最终他变成了他最讨厌的那种人！良多：“你以为可以很容易成为想象中的人，那就大错特错了！”","text":"良多一直想成为自己理想中的那个人，但理想很丰满，现实很骨感，最终他变成了他最讨厌的那种人！良多：“你以为可以很容易成为想象中的人，那就大错特错了！” 《我曾七次鄙视自己的灵魂》 第一次，当他本可进取时，却故作谦卑； 第二次，当它空虚时，用爱欲来填充； 第三次，在困难和容易之间，它选择了容易； 第四次，它犯了错，却借由别人也会犯错来宽慰自己； 第五次，它自由软弱，却把它认为是生命的坚韧； 第六次，当它鄙夷一张丑恶的嘴脸时，却不知那正是自己面具中的一副； 第七次，它侧身于生活的污泥中虽不甘心，却又畏首畏尾。","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://dengwq.top/tags/随笔/"}]},{"title":"23种设计模式解析","slug":"23种设计模式解析","date":"2018-08-21T16:35:52.000Z","updated":"2020-03-31T03:53:53.203Z","comments":true,"path":"2018/08/22/23种设计模式解析/","link":"","permalink":"https://dengwq.top/2018/08/22/23种设计模式解析/","excerpt":"设计模式(Design Pattern)是一套被反复使用、多数人知晓的、经过分类的、代码设计经验的总结。 使用设计模式的目的：为了代码可重用性、让代码更容易被他人理解、保证代码可靠性。设计模式使代码编写真正工程化；设计模式是软件工程的基石脉络，如同大厦的结构一样。","text":"设计模式(Design Pattern)是一套被反复使用、多数人知晓的、经过分类的、代码设计经验的总结。 使用设计模式的目的：为了代码可重用性、让代码更容易被他人理解、保证代码可靠性。设计模式使代码编写真正工程化；设计模式是软件工程的基石脉络，如同大厦的结构一样。 设计模式的分类总体来说设计模式分为三大类： 创建型模式，共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。 结构型模式，共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。 行为型模式，共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。 其实还有两类：并发型模式和线程模式。用一个图片来整体描述一下： 设计模式的六大原则总原则：开闭原则(Open Close Principle)开闭原则就是说对扩展开放，对修改关闭。在程序需要进行拓展的时候，不能去修改原有的代码，而是要扩展原有代码，实现一个热插拔的效果。所以一句话概括就是：为了使程序的扩展性号，易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类等，后面具体设计中我们会提到这点。","categories":[],"tags":[{"name":"java","slug":"java","permalink":"https://dengwq.top/tags/java/"}]},{"title":"idea的使用技巧","slug":"idea的使用技巧","date":"2018-08-20T15:31:01.000Z","updated":"2020-03-31T03:53:53.203Z","comments":true,"path":"2018/08/20/idea的使用技巧/","link":"","permalink":"https://dengwq.top/2018/08/20/idea的使用技巧/","excerpt":"idea在Java领域的强大编辑能力是毋庸置疑的，这是我近期学习idea的一些总结！","text":"idea在Java领域的强大编辑能力是毋庸置疑的，这是我近期学习idea的一些总结！ 高效定位代码无处不在的跳转项目间的跳转 功能 快捷键 跳转到下一个项目窗口 Ctrl + Atl + ] 返回到上一个项目窗口 Ctrl + Atl + [ 文件间的跳转 功能 快捷键 最近的文件 Ctrl + E 最近编辑的文件 Ctrl + Shift + E 浏览修改位置的跳转 功能 快捷键 最后一个修改位置 Ctrl + Shift + backspace 上一个浏览位置 Ctrl + Alt + 左箭头 下一个浏览位置 Ctrl + Alt + 右箭头 利用书签跳转 功能 快捷键 添加书签 F11 添加带有标记的书签 Ctrl + F11 添加带有标记的书签 Ctrl + Shift + 数字或字母 跳转到带有标记的书签 Ctrl + 书签编号（见上一条） 书签总览 Shift + F11 字符串跳转之插件emacsIdea首先到idear商店安装emacsIdea插件，设置emacsIDEAS插件的快捷键：打开搜索功能，输入keymap，右边搜索框输入acejumpword，新增一个快捷键。 功能 快捷键 跳转需要查找的字符位置 Alt + J + 需要查找的字母 导航窗口的跳转 功能 快捷键 快速寻找功能快捷键 Ctrl + Shift + A 编辑区和文件区来回跳转 Alt + 1 &amp; Esc 精准搜索快捷键按两次可以全局搜索 功能 快捷键 查找类 Ctrl + N 查找文件 Ctrl + Shift + N 查找符号 Chrl + Alt + Shift + N 查找字符串 Ctrl + Shift + F 代码小助手列操作示例：使用建表语句快速创建枚举类 选中单词 ==Ctrl + &gt;== 英文大小写切换 ==Ctrl + Shift + U== 对所有选中单词进行操作 ==Ctrl + Alt + Shift +J== live template示例： main方法模板 位置：菜单 –&gt; File –&gt; Setting –&gt; Editor –&gt; Live Templates 功能：定义模板，使用特定 “字符串” 快速敲击出某段代码 举例： psvm 敲出 public static void main(String[] args){ … } postfix示例：100.for 位置： 菜单 –&gt; File –&gt; Setting –&gt; Editor –&gt; General –&gt; Postfix Completion 功能： 使用后缀，快速敲出代码块 举例： 100.fori 敲出 for(int i=0; i&lt;100; i++) {…} alter + enter 自动创建函数 自动生成参数化 String.format 实现接口 单词拼写，单词建议 导包 编译高质量代码重构 重构变量： Shift + F6 重构方法： Ctrl + F6 抽取 抽取变量：Ctrl + Alt + V 抽取静态变量： Ctrl + Alt + C 抽取成员变量： Ctrl + Alt + F 抽取方法参数： Ctrl + Alt + P 抽取函数: Ctrl + Alt + M 关联一切Spring的关联示例： 导入Spring的引用，通过bean查找实现类 位置： 菜单 –&gt; File –&gt; Project Structure –&gt; Facets 功能： 帮助管理Spring容器。还提供了很多其他的管理，比如EJB 使用： 点击 + 号，选择Spring，选择模块 在Spring中，点击 + 号，起一个名字，选择Spring配置文件。(SpringBoot中，选择类文件) 项目的各个文件中会出现Spring的Logo，其提供了很多功能。比如：查看该Bean是在哪里提供的。 与数据库的关联关联了数据库之后，如果需要重构字段或表名，不仅可以更改当前页面，还可以更改所有引用到该表的SQL以及数据库表名或字段。 调试程序断点调试 功能 快捷键 添加/取消断点 Ctrl + F8 调试当前类 Shift + F9 运行 Shift + F10 单步运行 F8 步入代码里面 F7 强制进入代码 Alt + Shift + F7 跳到下一个断点 F9 运行到光标出 Alt + F9 debug时查看选中值 Alt + F8 正常运行Java类 Ctrl + Shift + F10 debug运行Java类 Ctrl + Shift + F9","categories":[],"tags":[{"name":"工具","slug":"工具","permalink":"https://dengwq.top/tags/工具/"}]},{"title":"婉婷，Welcome","slug":"婉婷，Welcome","date":"2018-08-19T18:10:45.000Z","updated":"2020-03-31T03:53:53.203Z","comments":true,"path":"2018/08/20/婉婷，Welcome/","link":"","permalink":"https://dengwq.top/2018/08/20/婉婷，Welcome/","excerpt":"婉婷，你是我的第一个访客，欢迎你！","text":"婉婷，你是我的第一个访客，欢迎你！ 从昨儿下午忙活到现在，我的博客上线了，还没想好写些什么，网站也还有很多问题，但算是架子搭起来了，晚安，好梦！","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://dengwq.top/tags/随笔/"}]},{"title":"Git常用指令","slug":"Git常用指令","date":"2018-08-19T15:33:32.000Z","updated":"2020-03-31T03:53:53.203Z","comments":true,"path":"2018/08/19/Git常用指令/","link":"","permalink":"https://dengwq.top/2018/08/19/Git常用指令/","excerpt":"","text":"Git常用指令（20180819初始版本）","categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://dengwq.top/tags/git/"}]}]}